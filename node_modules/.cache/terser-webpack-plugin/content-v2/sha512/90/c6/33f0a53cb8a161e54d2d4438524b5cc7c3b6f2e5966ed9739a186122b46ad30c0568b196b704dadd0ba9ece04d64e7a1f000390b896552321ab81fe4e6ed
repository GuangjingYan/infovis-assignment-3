{"code":"(this.webpackJsonpinfovis_assn3=this.webpackJsonpinfovis_assn3||[]).push([[0],{150:function(t,n,e){},151:function(t,n,e){\"use strict\";e.r(n);var r=e(2),a=e.n(r),c=e(31),i=e.n(c),s=e(4),o=e(0),l=e(1),u=function(t){var n=t.attrPosition,e=t.center,a=t.radius,c=t.margin,i=t.width,s=t.setCircleUpdate,u=Object(r.useRef)(null),f=2*c+i,d=o.d().on(\"drag\",(function(t){var n=this.getAttribute(\"class\");o.i(\".lineSvg\").select(\".\".concat(n)).style(\"stroke\",\"red\"),o.i(\".textSvg\").select(\".\".concat(n)).style(\"fill\",\"red\"),o.i(this).style(\"fill\",\"red\");var r=t.x-e,c=(t.y-e)/r;r>=0?(t.subject[0]=e+a*Math.cos(Math.atan(c)),t.subject[1]=e+a*Math.sin(Math.atan(c))):(t.subject[0]=e-a*Math.cos(Math.atan(c)),t.subject[1]=e-a*Math.sin(Math.atan(c)));p(),h(),v(),s((function(t){return!t}))})).on(\"end\",(function(t){o.i(this).style(\"fill\",\"black\");var n=this.getAttribute(\"class\");o.i(\".lineSvg\").select(\".\".concat(n)).style(\"stroke\",\"black\"),o.i(\".textSvg\").select(\".\".concat(n)).style(\"fill\",\"black\")}));function p(){o.i(\".circleSvg\").selectAll(\"circle\").data(n).join(\"circle\").attr(\"cx\",(function(t){return t[0]})).attr(\"cy\",(function(t){return t[1]})).attr(\"r\",7).attr(\"fill\",\"black\").attr(\"class\",(function(t,n){return\"attr\".concat(n)})).call(d).on(\"mouseover\",(function(t){o.i(this).style(\"fill\",\"red\");var n=this.getAttribute(\"class\");o.i(\".lineSvg\").select(\".\".concat(n)).style(\"stroke\",\"red\"),o.i(\".textSvg\").select(\".\".concat(n)).style(\"fill\",\"red\")})).on(\"mouseout\",(function(t){o.i(this).style(\"fill\",\"black\");var n=this.getAttribute(\"class\");o.i(\".lineSvg\").select(\".\".concat(n)).style(\"stroke\",\"black\"),o.i(\".textSvg\").select(\".\".concat(n)).style(\"fill\",\"black\")}))}function h(){o.i(\".textSvg\").selectAll(\"text\").data(n).join(\"text\").attr(\"class\",(function(t,n){return\"attr\".concat(n)})).attr(\"transform\",(function(t){var n=t[0],r=t[1];return n>e?n+=20:n-=80,r>e?r+=20:r-=20,\"translate(\".concat(n,\",\").concat(r,\")\")})).text((function(t){return t[2]}))}function v(){var t=o.i(\".lineSvg\"),r=n.map((function(t){return[[e,e],[t[0],t[1]]]}));t.selectAll(\"line\").data(r).join(\"line\").attr(\"x1\",(function(t){return t[0][0]})).attr(\"y1\",(function(t){return t[0][1]})).attr(\"x2\",(function(t){return t[1][0]})).attr(\"y2\",(function(t){return t[1][1]})).attr(\"class\",(function(t,n){return\"attr\".concat(n)})).attr(\"stroke\",\"black\").style(\"stroke-width\",\"1px\")}return Object(r.useEffect)((function(){!function(){var t=o.i(u.current).append(\"g\").attr(\"transform\",\"translate(\".concat(c+a,\",\").concat(a+c,\")\")).attr(\"class\",\"arcSvg\"),n=o.b().innerRadius(a).outerRadius(a).startAngle(0).endAngle(2*Math.PI);t.append(\"path\").attr(\"d\",n).attr(\"fill\",\"white\").style(\"stroke\",\"grey\").style(\"stroke-width\",\"3px\").style(\"stroke-dasharray\",\"5,5\")}(),function(){o.i(u.current).append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"circleSvg\");p()}(),function(){o.i(u.current).append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"textSvg\");h()}(),function(){o.i(u.current).append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"lineSvg\");v()}()}),[]),Object(l.jsx)(\"div\",{children:Object(l.jsx)(\"svg\",{ref:u,width:f,height:f-c})})};function f(t,n){for(var e=[],r=0;r<t.length;r++){for(var a=[],c=0;c<t.length;c++){for(var i=0,s=0;s<t[0].length;s++)i+=Math.pow(t[r][s]-t[c][s],2);a.push([Math.sqrt(i),c])}a.sort((function(t,n){return t[0]-n[0]})),a=a.slice(1,n+2).map((function(t){return t[1]})),e.push(a)}return e}function d(t,n){t=1-t,n=1-n;var e=o.h().exponent(1.5145),r=o.g().domain([1,-1]).range([39,-39]),a=o.g().domain([1,-1]).range([26,-26]);return o.c(o.f(100*e(1-(t+n)/2),r(t-n),a(n-t)))}var p=function(t){var n,e,a,c,i=t.attrPosition,u=t.pointData,p=t.center,h=t.circleUpdate,v=Object(r.useRef)(null),g=40,j=680,b=Object(r.useRef)(null),x=Object(r.useState)(!1),m=Object(s.a)(x,2),O=m[0],k=m[1];function S(){a=u.map((function(t){var n=0,e=0;return t.forEach((function(t,r){n+=t*(i[r][0]-p),e+=t*(i[r][1]-p)})),[n,e]})),c=a}function y(){n=o.e(c.map((function(t){return t[0]}))),e=o.e(c.map((function(t){return t[1]})));var t=o.g().domain(n).range([g,640]),r=o.g().domain(e).range([g,640]);o.i(\".pointSvg\").selectAll(\"circle\").data(c).join(\"circle\").transition().duration(10).attr(\"cx\",(function(n){return t(n[0])})).attr(\"cy\",(function(t){return r(t[1])})).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",(function(t,n){return\"point\".concat(n)}))}Object(r.useEffect)((function(){b.current?(S(),y(),k(!1)):(S(),function(){o.i(v.current).append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"pointSvg\");y()}(),b.current=!0)}),[h]),Object(r.useEffect)((function(){O?(S(),function(){var t=o.i(v.current).append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"voronoiSvg\");n=o.e(c.map((function(t){return t[0]}))),e=o.e(c.map((function(t){return t[1]})));var r=o.g().domain(n).range([g,640]),a=o.g().domain(e).range([g,640]),i=c.map((function(t){return[r(t[0]),a(t[1])]})),s=function(t,n){console.log(t,n);var e=Array(10).fill(0).reduce((function(t,n,e){return t+e+1}),0),r=f(t,10),a=f(n,10);return{trust:r.map((function(t,n){var r=new Set(a[n]);return t.reduce((function(t,n,e){return r.has(n)?t+(10-e):t}),0)/e})),conti:a.map((function(t,n){var a=new Set(r[n]);return t.reduce((function(t,n,e){return a.has(n)?t+(10-e):t}),0)/e}))}}(u,i),l=o.a.from(i).voronoi([0,0,j,j]);t.append(\"path\").attr(\"fill\",\"none\").attr(\"stroke\",\"#ccc\").attr(\"stroke-width\",1).attr(\"d\",l.render()),t.append(\"g\").attr(\"fill\",\"none\").attr(\"pointer-events\",\"all\").attr(\"class\",\"cell\").selectAll(\"path\").data(i).join(\"path\").attr(\"d\",(function(t,n){return l.renderCell(n)})).attr(\"fill\",(function(t,n){return d(s.trust[n],s.conti[n])})),t.append(\"g\").selectAll(\"circle\").data(c).join(\"circle\").transition().duration(10).attr(\"cx\",(function(t){return r(t[0])})).attr(\"cy\",(function(t){return a(t[1])})).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",(function(t,n){return\"point\".concat(n)}))}()):o.i(\".voronoiSvg\").remove()}),[O]);return Object(l.jsxs)(\"div\",{children:[Object(l.jsx)(\"div\",{children:Object(l.jsx)(\"svg\",{ref:v,width:j,height:j})}),Object(l.jsx)(\"div\",{children:Object(l.jsx)(\"button\",{onClick:function(){k(!O)},children:O?\"Disable CheckVis\":\"Enable CheckVis\"})})]})},h=function(t){var n=Object(r.useRef)(null),e=40;return Object(r.useEffect)((function(){for(var t=o.i(n.current),r=o.g().domain([e,240]).range([0,1]),a=o.g().domain([e,240]).range([1,0]),c=t.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"rectSvg\"),i=0;i<50;i++)for(var s=0;s<50;s++){var l=e+4*i,u=e+4*s;c.append(\"rect\").attr(\"x\",l).attr(\"y\",u).attr(\"width\",4).attr(\"height\",4).attr(\"stroke\",\"none\").attr(\"fill\",d(1-r(l),1-a(u)))}var f=t.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"colorTextSvg\");f.append(\"text\").attr(\"transform\",\"translate(\".concat(45,\",\").concat(55,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"Missing Neighbors\"),f.append(\"text\").attr(\"transform\",\"translate(\".concat(205,\",\").concat(55,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"Both\"),f.append(\"text\").attr(\"transform\",\"translate(\".concat(45,\",\").concat(235,\")\")).attr(\"fill\",\"black\").attr(\"font-size\",\"12px\").text(\"No Distortions\"),f.append(\"text\").attr(\"transform\",\"translate(\".concat(145,\",\").concat(235,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"False Neighbors\")}),[]),Object(l.jsx)(\"div\",{children:Object(l.jsx)(\"svg\",{ref:n,width:280,height:280})})},v=e(16),g=e(32);e(150);var j=function(){var t=150,n=230,e=Object(r.useState)(),a=Object(s.a)(e,2),c=a[0],i=a[1],o=Object(r.useState)(v.map((function(e,r){var a=2*Math.PI/v.length;return[n+t*Math.cos(a*r),n+t*Math.sin(a*r),e]}))),f=Object(s.a)(o,2),d=f[0];return f[1],Object(l.jsxs)(\"div\",{className:\"Container\",children:[Object(l.jsx)(\"div\",{children:Object(l.jsx)(p,{attrPosition:d,pointData:g,center:n,circleUpdate:c})}),Object(l.jsxs)(\"div\",{className:\"VerticalLayout\",children:[Object(l.jsx)(\"div\",{children:Object(l.jsx)(u,{attrPosition:d,center:n,radius:t,margin:80,width:360,setCircleUpdate:i})}),Object(l.jsx)(\"div\",{children:Object(l.jsx)(h,{})})]})]})};i.a.render(Object(l.jsx)(a.a.StrictMode,{children:Object(l.jsx)(j,{})}),document.getElementById(\"root\"))},16:function(t){t.exports=JSON.parse('[\"MedInc\",\"HouseAge\",\"AveRooms\",\"AveBedrms\",\"Population\",\"AveOccup\",\"Latitude\",\"Longitude\",\"Price\"]')},32:function(t){t.exports=JSON.parse(\"[[0.5396684183666433,0.78,0.12619872694859913,0.03396459448332646,0.008329360293911434,0.024548906815270877,0.5683760683760685,0.20083246618106063,0.8985208766412404],[0.05916470117653549,0.76,0.07316335728644284,0.04201243012395403,0.010769273915360238,0.02271760344300601,0.5651709401709402,0.1966701352757545,0.24534308425800846],[0.11019848002096522,1,0.06650369578833298,0.03747856856236093,0.025829430406371822,0.02134125789272633,0.5630341880341876,0.1977107180020803,0.26225591467370013],[0.19951448945531786,1,0.10486681748766087,0.04390574673673505,0.014835796617774911,0.032677151729601596,0.5630341880341876,0.19458896982309995,0.09162900529007645],[0.06897146246258673,0.3,0.04455771635339762,0.03170028818443804,0.01637827074627703,0.01559632036003638,0.5608974358974359,0.1956295525494272,0.27745605340172685],[0.13732914028772017,0.54,0.05593146622734762,0.04417752161383285,0.06391451888829683,0.01032276475743208,0.5608974358974359,0.19875130072840758,0.48148045069481754],[0.3762775685852609,0.78,0.12333004166359458,0.039288123122202465,0.02156659281487506,0.01568490362351857,0.5630341880341876,0.19979188345473484,0.7133360879124643],[0.40430476821009365,0.56,0.09669024947670633,0.006096209266238084,0.0028325433996129793,0.02190323383557547,0.5608974358974359,0.20603537981269407,0.9642454201553841],[0.11686045709714349,1,0.08502479285186777,0.027896253602305476,0.009395069691785624,0.014595324231753233,0.5598290598290593,0.19979188345473484,0.38235841927120695],[0.13957738513951534,0.94,0.06600425887523705,0.04181441262733111,0.04100176683400174,0.017377465233867528,0.5598290598290593,0.19979188345473484,0.2920139327468792],[0.17419070081791976,1,0.06287660634030852,0.0325932540487884,0.02717558964579185,0.0667089859110622,0.5576923076923076,0.20083246618106063,0.10254741479894071],[0.17712169487317417,0.74,0.06869451376822525,0.039078803537712425,0.030400762823569006,0.02124439063387435,0.5598290598290593,0.20291363163371517,0.2646108657442395],[0.15415649439318077,0.88,0.06046256294985667,0.021504940666420183,0.0382814033710071,0.022298757371346026,0.5576923076923076,0.20291363163371517,0.22350626524027994],[0.20964538420159726,1,0.09285208074220103,0.036196782962372526,0.033653980985500744,0.031347396613472384,0.5576923076923076,0.203954214360041,0.26867850850244385],[0.39888415332202315,0.64,0.1254353497437063,0.03170028818443804,0.011694758392461509,0.018779632833741546,0.5598290598290593,0.20603537981269407,0.6107886731135236],[0.09986069157666791,0.96,0.07965486758770332,0.03749912138890842,0.024735676024343047,0.047144327896776486,0.5555555555555551,0.20603537981269407,0.12117293690229737],[0.02077902373760362,0.52,0.08954492184623414,0.04755043227665707,0.01149844350337942,0.027137683601854555,0.5544871794871793,0.20499479708636825,0.10468827940852192],[0.05690266341153915,0.88,0.07966430547240637,0.04291731323431612,0.016714810556132036,0.037111586254340675,0.5544871794871793,0.20603537981269407,0.11603486183930244],[0.335864332905753,0.48,0.10773257457927339,0.024206411427891716,0.03356984603303699,0.019299192216693527,0.5555555555555551,0.21123829344432896,0.5191596678234471],[0.24425869988000162,0.82,0.08773504516275636,0.0333121672446637,0.022464032307821746,0.02943060018425724,0.5534188034188035,0.20811654526534862,0.16377614263296378],[0.2594102150315168,1,0.09465452438870484,0.031130821929627774,0.02086546821101046,0.01949315197885468,0.5683760683760685,0.1956295525494272,0.48897347682835185],[0.4264010151584116,1,0.13415496005821517,0.036794977356937014,0.033093081302409066,0.02126010365272325,0.5694444444444443,0.1977107180020803,0.7236122380384542],[0.16552185487096732,0.88,0.07564995723360214,0.03732597312984535,0.023249291864150097,0.02155488488986183,0.5683760683760685,0.19354838709677413,0.23956274981213913],[0.06215776334119529,1,0.042584705529090015,0.03740634005763689,0.09288498751998205,0.16391808256907237,0.5673076923076918,0.1977107180020803,0.30421686102149215],[0.12307416449428284,0.78,0.059663025588628064,0.028686528392255557,0.03331744117564574,0.016161426290932118,0.566239316239316,0.1956295525494272,0.2573319260716633],[0.0746058675052758,1,0.09286640190463404,0.04820539690856695,0.02383823653139636,0.021651432914820676,0.5651709401709402,0.1966701352757545,0.2584023583764539],[0.32502310312961197,1,0.10202713121249735,0.03133310337921289,0.03413074571612867,0.02139611081704873,0.5555555555555551,0.20083246618106063,0.5502022046623749],[0.17026661701217913,1,0.06683478926257166,0.036085342457789694,0.02369801161062344,0.02358331119211534,0.5566239316239318,0.1956295525494272,0.4022684601403123],[0.1505772334174701,1,0.06486142165432972,0.037031054134735925,0.02249207729197633,0.010543640983945354,0.5555555555555551,0.19979188345473484,0.4452998387928948],[0.30897504862001907,0.68,0.11204202830062059,0.03692561041264212,0.033934430827046586,0.027718837574352936,0.5502136752136751,0.21748178980228966,0.4465843575586436],[0.1724183114715659,0.6,0.08124875884890594,0.03745567191821209,0.04100176683400174,0.016302975980442596,0.5491452991452992,0.21748178980228966,0.4074065352033073],[0.16070123170714884,0.94,0.07076796974541677,0.03738163853437628,0.020837423226855875,0.013350405970004649,0.5523504273504268,0.20811654526534862,0.296937921348916],[0.1594874553454435,0.54,0.06905820012960842,0.04010317122709055,0.05606192332501332,0.015530091339587326,0.551282051282051,0.2091571279916744,0.2665376438928626],[0.21067295623508644,0.68,0.09655681731366324,0.02550597899897314,0.018145104748015818,0.024931484665504922,0.5491452991452992,0.2091571279916744,0.3463918938302423],[0.26097571067985265,0.56,0.10289939897201834,0.0465985959473593,0.025352665675743895,0.02195337082036714,0.5470085470085467,0.2091571279916744,0.3864260620294112],[0.41379429249251737,0.36,0.11471834896177888,0.013293669238635305,0.0016266090809658692,0.02698259559159839,0.5480769230769226,0.2216441207075958,0.6574595216023943],[0.14034978827878236,0.7,0.07745610529049432,0.04337561753808152,0.030400762823569006,0.022949082385296655,0.5470085470085467,0.2143600416233093,0.3020759964119109],[0.23225196893835948,0.76,0.09450873282819768,0.03200029091173556,0.024931990913425135,0.031093763855710006,0.5459401709401709,0.21123829344432896,0.3234846425077232],[0.17352174452766167,0.58,0.07176986109554423,0.038126022275878184,0.060464985837283,0.03237221025488109,0.5438034188034184,0.21748178980228966,0.27595744817502],[0.22876925835505715,0.32,0.08600457830958111,0.035854231394629045,0.15671537145581513,0.031115680643167838,0.5416666666666667,0.2143600416233093,0.3303354092583831],[0.1366119088012579,0.5,0.06223776791293692,0.035817208727871565,0.05617410326163166,0.03195501777058077,0.5416666666666667,0.21748178980228966,0.2669658168147788],[0.28216162535689165,0.44,0.08646911856159377,0.034219516384525826,0.038589898196707516,0.0352762883907075,0.5416666666666667,0.21748178980228966,0.3097831090064033],[0.3325954124770693,0.32,0.09566312926865472,0.0212698707818165,0.03256022660347197,0.04991653335440235,0.5384615384615384,0.21852237252861545,0.42560388438474767],[0.3599467593550434,0.26,0.11350536179747374,0.03816510545282076,0.04913481223883109,0.036997264601204546,0.536324786324786,0.22892819979188375,0.536500671161055],[0.31034744348353815,0.32,0.09785503746581911,0.03503028756117613,0.07336567854839161,0.02783048704084171,0.5341880341880342,0.2258064516129034,0.5069567395488341],[0.29310630198204163,0.66,0.09448979572186615,0.0333121672446637,0.03724373895728749,0.038937168803104334,0.5309829059829059,0.2278876170655565,0.3513158824322791],[0.32687135349857244,0.48,0.09931336790654183,0.03260724465837974,0.06526067812771685,0.03750589082534986,0.52991452991453,0.22892819979188375,0.4089051404300141],[0.2093143542847685,0.58,0.0889043373770072,0.04298344160601768,0.019463219003281265,0.03435554430343108,0.5320512820512817,0.22268470343392308,0.37978938173970944],[0.37479483041613215,0.42,0.13274179663431496,0.03456285601380201,0.02526853072328014,0.03536165725402602,0.5480769230769226,0.2341311134235172,0.4853340069920638],[0.3095129722348657,0.52,0.11614926657776206,0.0371737192378662,0.02322124687999551,0.03478960758768668,0.5459401709401709,0.23829344432882332,0.4206798957827108],[0.1989076012744652,0.54,0.08001765470320285,0.0319685557854347,0.053117199988782005,0.02756592977186971,0.5480769230769226,0.24973985431841744,0.32434098835155567],[0.2311968110784679,0.46,0.09420269272283134,0.048893664826845123,0.024539361135260958,0.024285641379347116,0.5448717948717943,0.24765868886576436,0.3427524239939542],[0.1594874553454435,0.52,0.09911365720254443,0.040828881200300565,0.0445634798216339,0.019691373950064345,0.6207264957264953,0.34235171696149763,0.17233960107128865],[0.08128163749465525,0.2,0.07232663159075672,0.032749837885210374,0.21011302128614298,0.01953347774086917,0.7670940170940171,0.23725286160249753,0.2573319260716633],[0.08136439497386243,1,0.07040398957969828,0.03046521202140799,0.00992792439072272,0.0226613571359993,0.7660256410256405,0.2414151925078037,0.13251951933307785],[0.1527151349636557,0.28,0.1132887350771729,0.054998940970327925,0.033036991334099895,0.027019899611882725,0.7820512820512822,0.25078043704474473,0.13358995163786844],[0.12461207431621633,0.44,0.09684818958806347,0.032745352630078856,0.017920744874779147,0.022086114456291744,0.7702991452991454,0.26742976066597224,0.13787168085703091],[0.1296464876346533,0.3,0.07878562586451306,0.02782990416191945,0.020332613512073366,0.017053494956441397,0.7670940170940171,0.26742976066597224,0.10897000862768436],[0.17026661701217913,0.44,0.09478223103466603,0.0311889932137213,0.012508062932944443,0.024083642784502386,0.7435897435897437,0.27367325702393297,0.11453625661259555],[0.13760499855174413,0.24,0.09870006354275104,0.035794034009580714,0.025633115517289733,0.03560692686392301,0.738247863247863,0.2726326742976057,0.04495815680120574],[0.09724693452504103,0.88,0.08342328012270636,0.03209326696358398,0.013966402108982808,0.016672545801072376,0.7264957264957262,0.2559833506763781,0.06636680289701799],[0.23095543509744698,0.1,0.1146110694034267,0.04645584833486257,0.08834170008693945,0.030379873619645132,0.5940170940170936,0.35379812695109175,0.20916247235608576],[0.18103888222231415,0.18,1,1,0.0015985640968112854,0.023136846749861602,0.6260683760683761,0.41311134235171687,0.09548256158732266],[0.3104577867891477,0.02,0.13184589301351937,0.05039149584035669,0.09964382870123678,0.029688082295914756,0.581196581196581,0.2528616024973978,0.33440305201658743],[0.12091557357829548,0.88,0.08525602141489765,0.04191246155929057,0.029811818156322743,0.022121463193718785,0.5822649572649569,0.2455775234131113,0.16377614263296378],[0.16586667770099722,0.7,0.08438145013160636,0.03856868395773295,0.038561853212552934,0.025288557325723358,0.581196581196581,0.24453694068678403,0.13787168085703091],[0.048447607619205246,0.68,0.09957158934605961,0.058137594160648925,0.022800572117676752,0.038128204796744,0.5854700854700852,0.23517169614984298,0.12267154212900422],[0.11322602446862803,0.2,0.07027302897416679,0.03699916333550246,0.02574529545390807,0.028739536686808096,0.5833333333333335,0.23517169614984298,0.19117920963560345],[0.19766623908635744,0.58,0.09606712392802194,0.03453629806177346,0.04529264940965309,0.03862579416429986,0.586538461538461,0.2268470343392292,0.14044071838852837],[0.3242438035337444,0.08,0.09843853792008558,0.036644044698388965,0.12205177104074937,0.02237336685663424,0.581196581196581,0.2154006243496351,0.3667301076212639],[0.29232010592957336,0.68,0.10457423565700565,0.03581275800295974,0.025941610342990157,0.02478879346730952,0.5758547008547009,0.21852237252861545,0.32862271757071815],[0.15892194590419445,0.28,0.08683448664173325,0.030697114507715322,0.019519308971590432,0.003890187178392466,0.5801282051282052,0.21852237252861545,0.11689120768313492],[0.16177018248024164,0.76,0.08061888009665759,0.03994751763079591,0.02050088341700087,0.01442832300151867,0.5790598290598286,0.22268470343392308,0.2838786472304705],[0.3195404201321361,0.4,0.10402696749762878,0.03872250392149711,0.034944050256611604,0.027062782284340378,0.5779914529914527,0.2258064516129034,0.3731527014500076],[0.23073474848622777,0.66,0.09336937154925559,0.027668580709609262,0.03166278711052528,0.030984419610704046,0.5769230769230768,0.2195629552549427,0.27167571895585757],[0.3537399484145046,0.44,0.11479039967081779,0.030093854661578007,0.06784081666993858,0.028477050742403642,0.5747863247863243,0.22060353798126853,0.4249616250018733],[0.3927600998606916,0.48,0.11198478942084773,0.02857653715896422,0.021622682783184227,0.03152969593946836,0.5726495726495726,0.21644120707596237,0.49668058942284427],[0.38703604088219473,0.54,0.11991111480897013,0.0369602917548647,0.028325433996129794,0.01924207804226781,0.566239316239316,0.2216441207075958,0.7657872708472043],[0.40649784140908396,0.04,0.09811070000515662,0.04080843612731071,0.15671537145581513,0.01697745529299657,0.5576923076923076,0.22996878251820957,0.6932119605824009],[0.5472545206273017,0.24,0.15038716423276655,0.0296822327032006,0.0332052612390274,0.03755655372322827,0.5673076923076918,0.22268470343392308,0.8745431930139306],[0.2500034482283003,0.56,0.07734016131620308,0.0385130694170585,0.03463555543091118,0.010300902245502076,0.5694444444444443,0.21227887617065475,0.47998184546811073],[0.4622763823947256,0.34,0.13096170085921258,0.03557377845416571,0.05221976049583532,0.02644062532585229,0.5630341880341876,0.21331945889698203,0.7214713734288729],[0.32896097984855377,0.12,0.13488012176700376,0.038533322743878926,0.09254844771012705,0.038869443420694816,0.5790598290598286,0.2414151925078037,0.3667301076212639],[0.3951462738444987,0.48,0.13121200931659377,0.02853025936599424,0.014246851950528648,0.03264807990472553,0.5747863247863243,0.23100936524453683,0.5540557609596211],[0.2431069916277017,0.28,0.0814286644053604,0.037784497038734724,0.07796505594974339,0.028648288729008983,0.581196581196581,0.19458896982309995,0.30036330472424594],[0.38390504958552296,0.16,0.11633322329622736,0.02913769003779185,0.2030737302633424,0.035577228797466526,0.5779914529914527,0.1966701352757545,0.5127370739947035],[0.23524503110301928,0.04,0.07282615747636027,0.05228581918132227,0.04391844518607847,0.009333953924948523,0.5801282051282052,0.1904266389177938,0.17041282292266557],[0.1267775616888043,0.34,0.06315563683100132,0.03670559684513878,0.039627562610427124,0.02563220620172306,0.5779914529914527,0.18938605619146653,0.18796791272123162],[0.1832526447911063,0.82,0.08290861320811153,0.034727371406294186,0.02193117760888465,0.016261681997893504,0.5747863247863243,0.1904266389177938,0.2327119830614792],[0.06993006993006994,0.72,0.05598477532238822,0.019064508978053646,0.019743668844827103,0.024417011094875506,0.5758547008547009,0.18730489073881346,0.10447419294756378],[0.04310975021034193,0.68,0.0713699369425666,0.04747838616714699,0.03959951762627254,0.038735067400971955,0.571581196581196,0.1904266389177938,0.13037865472349663],[0.38398091060812956,0.6,0.11407613745140052,0.03030630157046438,0.042039431247721346,0.023081652219617596,0.5726495726495726,0.19354838709677413,0.6180676127860998],[0.32200935159515043,0.72,0.1234040644226408,0.04327340926764558,0.02467958605603388,0.02132614387687079,0.571581196581196,0.19458896982309995,0.4930411195865562],[0.11266741148397953,0.34,0.10269671749254113,0.04547815195364609,0.022884707070140505,0.03286017403519626,1,0,0.09013040006336959],[0.09668142508379195,0.46,0.10744315842800768,0.07903359519955784,0.01340550242589113,0.019381485440876853,0.6816239316239312,0.4349635796045778,0.16441840201583813],[0.10157101281361636,0.38,0.09133284910851236,0.06597365170852204,0.019968028718063774,0.021299727787211776,0.6773504273504269,0.43288241415192474,0.1738382062979955],[0.1625012068799051,0.2,0.10029291787887012,0.04330410720155329,0.02930700844154023,0.030193401559493117,0.6698717948717945,0.34235171696149763,0.2040243972930908],[0.23473469331457497,0.18,0.10832939660404776,0.04571515243440012,0.02908264856830356,0.02932549195382452,0.6517094017094012,0.3329864724245581,0.31663387575706325],[0.11505358546778666,0.66,0.08902857467477135,0.0324135446685879,0.029026558599994392,0.0264350156169247,0.6623931623931619,0.3631633714880328,0.22521895692794494],[0.24708624708624707,0.12,0.09387394659216941,0.02879994079035623,0.04705948341139187,0.02810350332938761,0.6431623931623928,0.34131113423517184,0.2950111432002929],[0.13824636901559978,0.26,0.06410511933933633,0.04746138652332998,0.025212440754970974,0.02534673208497243,0.4465811965811966,0.455775234131113,0.12288562858996235],[0.05727507206797148,0.52,0.09733713184769037,0.03911950456802992,0.026278150152845164,0.04163955478019411,0.4423076923076924,0.4536940686784599,0.03939190881629455],[0.30480269237665686,0.5,0.10896580128387208,0.022810424758802156,0.03348571108057324,0.0264350156169247,0.44551282051282,0.4672216441207071,0.1819734918144042],[0.16561150880677505,0.34,0.10694199852297905,0.04193841953587137,0.03455142047844743,0.03356804234583616,0.4369658119658116,0.4599375650364206,0.12117293690229737],[0.09635729162356381,0.78,0.08905731977503835,0.03778674351585015,0.030344672855259838,0.03246612587915421,0.4487179487179483,0.4516129032258068,0.07278939672576168],[0.07964717728031338,0.66,0.08082367126280096,0.04059745846489362,0.046302268839218105,0.04309860350464354,0.44764957264957245,0.45785639958376606,0.03532426605809022],[0.1842733203679949,0.74,0.09978806492817663,0.03734984449453592,0.024567406119415543,0.03289743732928896,0.44764957264957245,0.46097814776274637,0.0749302613353429],[0.14983931256120606,0.6,0.08353327412883008,0.03339851790860436,0.027484084471492275,0.024713063943866204,0.4497863247863249,0.45889698231009335,0.08028242285929595],[0.20183169887311897,0.82,0.11021371357155031,0.03677233429394812,0.02425891129371512,0.02090982630384469,0.4497863247863249,0.4526534859521326,0.11153904615918182],[0.25323788637398104,0.3,0.11248981122336285,0.03838469399968696,0.03160669714221612,0.04701490490751279,0.4487179487179483,0.44432882414151886,0.2001708409958446],[0.4288354643384229,0.26,0.13084058386370556,0.026090405724832438,0.02958745828308607,0.03409787801201131,0.4561965811965808,0.44849115504682646,0.27274615126064816],[0.38741534599522764,0.28,0.1387708709402346,0.030947510892459302,0.0277925792971927,0.027048886508911053,0.4561965811965808,0.4516129032258068,0.23934866335118105],[0.24476214121184536,0.34,0.10760648891360894,0.03950387580783892,0.0645034635555431,0.015380975420609226,0.4561965811965808,0.4526534859521326,0.1993144951520121],[0.05783368505261997,0.44,0.06604792682418667,0.034406910461505194,0.07681521159940545,0.044921350564357206,0.45085470085470075,0.4495317377731523,0.05544839338815373],[0.12110867436311222,0.48,0.07057734800856778,0.040816174164937054,0.024791765992652214,0.020542147184814574,0.4519230769230766,0.4547346514047857,0.06765132166276673],[0.21152122039696006,0.52,0.10658754975276216,0.03844503035133976,0.01789269989062456,0.020465091762879,0.4540598290598291,0.45681581685744027,0.11260947846397247],[0.15282547826926526,0.6,0.09056573643904933,0.038658888029802496,0.043329500518832206,0.03724022715925426,0.4540598290598291,0.46409989594172674,0.07514434779630103],[0.3064302561343981,0.04,0.11234894006475028,0.03982448264376639,0.01674285554028662,0.03593357773746155,0.4540598290598291,0.4672216441207071,0.17448046568086986],[0.17816305981986458,0.8,0.10556477627431443,0.02870161227509931,0.0166026306195137,0.029016795709490582,0.4423076923076924,0.4713839750260147,0.21494280680195504],[0.14414283940911157,0.38,0.10154917137387193,0.03382037115218709,0.030709257649269427,0.04474560578539686,0.44337606837606824,0.4828303850156088,0.0779274717887566],[0.11863974290009795,0.22,0.09407637148142363,0.04414512788184438,0.038141178450234174,0.02753495682524212,0.44337606837606824,0.5109261186264304,0.14365201530290025],[0.13954979931311295,0.7,0.06404550338629492,0.025039527242960793,0.023950416468014695,0.04181701211766338,0.42948717948717907,0.4911550468262226,0.0655104570531855],[0.14177045833850568,0.8,0.08990081705213927,0.03235465193136452,0.037075469052359984,0.03521107071021086,0.42841880341880323,0.47450572320499507,0.07878381763258908],[0.18678363057061284,0.48,0.11938240169223525,0.04271583234119257,0.02179095268811173,0.03535237353743972,0.41452991452991406,0.45681581685744027,0.09013040006336959],[0.13378436159501247,0.18,0.06627113302942574,0.059811864498939694,0.03788877359284292,0.059926530286913034,0.3985042735042732,0.4047866805411031,0.11689120768313492],[0.0969434904346147,0.46,0.055307175485181256,0.03960801871622347,0.048237372745884396,0.049768237786541186,0.44764957264957245,0.393340270551509,0.058017430919651204],[0.09914346009020565,0.28,0.08996993908403882,0.03518566018377417,0.028213254059511455,0.027412632220923275,0.768162393162393,0.20083246618106063,0.08606275730516526],[0.08812981889904967,1,0.07158110853383667,0.02935625279051833,0.015873461031494517,0.015071483549297035,0.879273504273504,0,0.09419804282157393],[0.13793602846857284,0.6,0.07236205281408138,0.033565011018816746,0.023754101578932606,0.030422602045334687,0.8803418803418799,0.002081165452653072,0.08499232500037465],[0.23994841450462756,0.4,0.10186046547495632,0.030194165895132158,0.03289676641332698,0.02764138225263781,0.8803418803418799,0.014568158168574461,0.21622732556770377],[0.06835767782513345,0.34,0.09410379902925221,0.04827750310657537,0.028269344027820623,0.036600460086496596,0.9134615384615382,0.0551508844953175,0.05630473923198622],[0.15988055337167761,0.2,0.0921494712751885,0.03766982297241664,0.0316347421263707,0.023352978392526286,0.8931623931623932,0.007284079084286492,0.20124127330063518],[0.2028178921670046,0.6,0.09032454711315466,0.02819799005641231,0.025577025548980566,0.026522705061294206,0.8579059829059831,0.011446409989594114,0.13337586517691036],[0.08448848981393361,0.58,0.08684626908207753,0.056336445297135024,0.025016125865888885,0.02452418312132818,0.8205128205128205,0.0499479708636826,0.04581450264503823],[0.09716417704583385,0.36,0.0709776491711425,0.02270020636551242,0.030260537902796085,0.04306350240025643,0.045940170940170916,0.9001040582726318,0.06593862997510175],[0.08692983545054551,0.6,0.0701563107687064,0.04408028238664461,0.016770900524441204,0.047132318850387996,0.02670940170940171,0.9146722164412063,0.07642886656204977],[0.12012248106922663,0.32,0.08666034096358473,0.03284264091180517,0.03199932692038029,0.043439980663313914,0.02243589743589753,0.8990634755463061,0.09912203142361074],[0.1834319526627219,0.54,0.11360563540305631,0.04645062636005412,0.023081021959222594,0.04263562603209048,0.023504273504273383,0.8949011446409985,0.09269943759486707],[0.10776403084095391,0.08,0.07739842324856244,0.02961895613192444,0.07802114591805255,0.06788570263223659,0.011752136752136691,0.8990634755463061,0.07450208841342666],[0.05345443511123984,0.34,0.06675774090540788,0.06486045806158046,0.039431247721345035,0.020516108390682117,0.025641025641025095,1,0.04966805894228444],[0.04463386711907422,0.24,0.11449632865076616,0.10894183545074482,0.011526488487534004,0.014391734312578385,0.3675213675213673,0.8262226847034337,0],[0.056709562626722394,0.58,0.05847714359803087,0.04570859883877237,0.03892643800656253,0.01969699315587066,0.3044871794871789,0.534859521331946,0.03960599527725267],[0.18556295775230686,0.64,0.10533095362716749,0.03600906521921602,0.023249291864150097,0.02870674803422219,0.30341880341880306,0.5400624349635794,0.09269943759486707],[0.1788871877629274,0.08,0.08298518634858364,0.03536192575012715,0.06436323863477017,0.02306565044404265,0.3044871794871789,0.5473465140478659,0.14536470699056522],[0.06035089171183846,0.66,0.06296066637331657,0.034693777867714284,0.028493703901057297,0.02385044749547314,0.3012820512820513,0.5400624349635794,0.052665269395698135],[0.06744734555385443,0.84,0.08128521481359068,0.04348965155881583,0.00950724962840396,0.03358975892237184,0.3002136752136747,0.5359001040582718,0.07086261857713858],[0.08423332091971146,0.84,0.08114566288843587,0.04399930709752602,0.04195529629525759,0.02884130485953609,0.3002136752136747,0.534859521331946,0.06144281429498117],[0.10077792030454753,0.6,0.06926388221576255,0.0409685927807356,0.023810191547241774,0.04747180441463287,0.3002136752136747,0.5411030176899067,0.04388772449641513],[0.18450779989241528,0.5,0.08631708216300837,0.03201941860240219,0.06133438034607511,0.0229256469701839,0.298076923076923,0.5327783558792915,0.11153904615918182],[0.2019765244617316,0.64,0.10254232057807207,0.03639662717472516,0.03786072860868834,0.030014102253614193,0.2970085470085472,0.534859521331946,0.08242328746887717],[0.25161721907284035,0.16,0.07893705060126706,0.01685795672236012,0.011834983313234428,0.025113264430182605,0.2927350427350422,0.5338189386056187,0.14986052267068578],[0.1775354822692101,0.42,0.10934977655477357,0.04387689807051877,0.05519252881622122,0.03802085565881214,0.2895299145299146,0.4849115504682619,0.053521615239530626],[0.11472945200755852,0.68,0.0841159331411883,0.03551960001388842,0.025436800628207645,0.04826228040941601,0.3141025641025639,0.518210197710717,0.16591700724254502],[0.14224631384394698,0.56,0.11585691095494081,0.05189870189487645,0.011105813725215245,0.0479166264817784,0.34188034188034144,0.5223725286160246,0.2641826928223232],[0.3900911711562599,0.22,0.11229501078735828,0.03588975358326244,0.014919931570238663,0.022515682504599753,0.3076923076923072,0.5442247658688856,0.3667301076212639],[0.242534585729852,0.06,0.08072842697267511,0.04973665904799762,0.013882267156519057,0.018274630071432606,0.33012820512820473,0.6732570239334026,0.11689120768313492],[0.3156025434131943,0.18,0.10316125859996222,0.038126022275878184,0.020753288274392125,0.025126134071738866,0.3183760683760681,0.6576482830385009,0.13937028608373778],[0.31416118398366916,0,0.10976586831117746,0.04604982691881384,0.025184395770816388,0.028048022691642225,0.2467948717948713,0.6212278876170655,0.16741561246925185],[0.09818485262272245,0.54,0.08615008805317276,0.03508332289186819,0.024791765992652214,0.045264968147548615,0.2745726495726496,0.5452653485952128,0.15713946234326195],[0.1839147046247638,0.24,0.07877490888993872,0.03947805405868678,0.019968028718063774,0.028227911956480604,0.40064102564102566,0.455775234131113,0.2001708409958446],[0.1640598060716404,0.72,0.10201124300485856,0.03719028222755301,0.037944863561152085,0.024759645228863484,0.40491452991452986,0.4693028095733602,0.11260947846397247],[0.2476517565274962,0.28,0.08942419022999243,0.0280237083692326,0.02880219872675772,0.027660014116967908,0.4027777777777774,0.4682622268470344,0.1282377901139154],[0.09310906056468188,0.24,0.07353249293406122,0.03544978463636082,0.02950332333062232,0.0506036925383066,0.3771367521367523,0.4786680541103012,0.041532773425875774],[0.1048882084385043,0.82,0.04669342978153976,0,0.0017107440334296212,0.03712296549296302,0.7072649572649571,0.1300728407908429,0.08477823853941652],[0.10632956786802941,0.44,0.12610782912409413,0.07967527789213669,0.027764534313038113,0.01875883016313507,0.6965811965811962,0.1352757544224763,0.09826568557977826],[0.12537758099888277,0.24,0.10796364497831003,0.07149426696915814,0.017191575286759964,0.018694651711264023,0.6816239316239312,0.1602497398543176,0.052665269395698135],[0.08161266741148399,0.26,0.09100879269316468,0.0228946525776497,0.004655467369660936,0.04414964534226158,0.686965811965812,0.13839750260145664,0.17341003337607927],[0.20259030909918482,0.4,0.10498210532295632,0.0544709177253724,0.012227613091398604,0.03834703499969776,0.6677350427350428,0.15608740894901146,0.10789957632289376],[0.21059709521247985,0.34,0.09943285816716482,0.03794242987326562,0.06181114507670303,0.030803094529135468,0.833333333333333,0.35900104058272664,0.15585494357751323],[0.27231348533123684,0.66,0.11390983968502301,0.04161878326055057,0.023950416468014695,0.0273600325283096,0.18055555555555533,0.6129032258064517,0.49025799559410066],[0.2892718721121088,0.56,0.10562927455973681,0.02813177544322551,0.04697534845892812,0.03720900363864417,0.18376068376068366,0.604578563995838,0.46092815044283786],[0.19217665963228095,0.66,0.06292646601606477,0.03029485668857626,0.032868721429172396,0.09127048389608759,0.18376068376068366,0.59729448491155,0.21494280680195504],[0.0680542337347071,0.66,0.06135644136840045,0.034921672403475205,0.09588580082452254,0.07480701521106767,0.1826923076923078,0.59729448491155,0.19503276593284966],[0.24521730734748487,0.14,0.09169973314075898,0.042005335427057214,0.022295762402894242,0.024212285685126872,0.18696581196581197,0.5941727367325697,0.32027334559335136],[0.49975172756237846,0.52,0.13262162481045625,0.03413877189093327,0.02364192164231427,0.029072154167653345,0.1848290598290595,0.5868886576482831,0.9456198980520275],[0.2966579771313499,0.56,0.09526545171157605,0.031030563786175268,0.02745603948733769,0.04411318369738012,0.1826923076923078,0.5931321540062439,0.3142789246865239],[0.3497537964993586,0.64,0.11025449407231322,0.035840402646426114,0.07000028044984155,0.03797626268876031,0.1826923076923078,0.5900104058272635,0.4131868696491765],[0.21032813340505652,0.46,0.07915347272757958,0.0385048720820707,0.12502453936113525,0.02475975166598945,0.18162393162393117,0.5900104058272635,0.48897347682835185],[0.21539013254989586,0.26,0.06977097238915482,0.03862448596315124,0.13929943629581848,0.018318888740488905,0.18055555555555533,0.5796045785639952,0.3433946833768286],[0.18899739313940497,0.5,0.06264024598079873,0.034402017291066275,0.02916678352076731,0.013794556495680578,0.17841880341880284,0.5858480749219559,0.422820760392292],[0.2770168687328451,0.48,0.0890153303452968,0.029590542042470323,0.04389040020192388,0.02769936359699339,0.17841880341880284,0.5889698231009362,0.6125013648011886],[0.24023116922525203,0.38,0.06858803219818829,0.0447120764935434,0.04986398182685027,0.04596156585830964,0.18055555555555533,0.5941727367325697,0.27745605340172685],[0.1948317954235114,0.74,0.08060827428445717,0.04078635804621964,0.02490394592927055,0.03158029781431753,0.177350427350427,0.5952133194588969,0.3110676277721521],[0.21787285692611139,0.68,0.08790189554108822,0.04119100582825146,0.04293687074066803,0.03680059235806113,0.177350427350427,0.599375650364203,0.32305646958580697],[0.25418959738486363,0.64,0.08964801134249684,0.035216341275317614,0.0536500546877191,0.041652022667881546,0.177350427350427,0.59729448491155,0.35474126580760906],[0.251348257265417,0.18,0.07046850413641159,0.0347079962501302,0.04170289143786634,0.01898816080897754,0.17414529914529867,0.6035379812695106,0.30721407147490587],[0.11984662280520268,0.5,0.04842430123749045,0.03390727027322804,0.09473595647418459,0.04520060445363234,0.17521367521367529,0.59729448491155,0.42560388438474767],[0.19666625287927064,0.48,0.06892057753004145,0.0372365610238936,0.04414280505931514,0.01482341161703156,0.17200854700854695,0.6004162330905303,0.4465843575586436],[0.12452931683700916,0.58,0.047212199471987126,0.037394950732540684,0.030681212665114845,0.04042038947518979,0.17307692307692282,0.6035379812695106,0.3577384762610228],[0.1857215762541206,0.48,0.06858803219818829,0.039354281307441195,0.07799310093389797,0.011096792199617045,0.17200854700854695,0.6004162330905303,0.4973228488057187],[0.26581012675687227,0.8,0.09141361393818362,0.0345821325648415,0.023473651737386768,0.013640354881394813,0.17094017094017033,0.6035379812695106,0.8242328746887718],[0.15143239403594436,0.42,0.054705926091485384,0.04234864753596742,0.06237204475979471,0.031317137354932564,0.17521367521367529,0.5910509885535893,0.3399693000014986],[0.11949490351857217,0.68,0.06043536613077317,0.02593659942363113,0.03312112628656365,0.01912760477843169,0.17307692307692282,0.5952133194588969,0.4026966330622285],[0.24465179790623576,0.64,0.09438385932115277,0.029902162594144285,0.033878340858737414,0.025243494584540335,0.17094017094017033,0.5962539021852227,0.742451846602769],[0.28965807368174235,0.68,0.10541544854306184,0.03719606678927781,0.029138738536612727,0.026901664469122233,0.17628205128205113,0.5879292403746089,0.40826288104713976],[0.11934318147335898,0.8,0.07619397346873033,0.028283490655576463,0.024090641388787616,0.02636924429907908,0.17521367521367529,0.5889698231009362,0.3658737617774314],[0.25345167652859957,0.68,0.09201665799972907,0.03901573930392374,0.0242869562778697,0.03572900876172566,0.17521367521367529,0.5827263267429755,0.33825660831383364],[0.3135336064330147,0.64,0.11296947334796696,0.03637737988378136,0.02439913621448804,0.03211516777465361,0.17628205128205113,0.5796045785639952,0.41704042594642277],[0.14592902166866661,0.34,0.04660278657278967,0.04055534317473387,0.055501023641921644,0.02456022799655332,0.17628205128205113,0.5785639958376694,0.3198451726714351],[0.26293430435442267,0.64,0.09496658810394255,0.03170028818443804,0.009647474549176879,0.03153773053608171,0.17414529914529867,0.5775234131113421,0.37936120881779317],[0.4343250437924994,0.62,0.1307345650142138,0.03560854289210848,0.056538688055641245,0.029348529374193338,0.17307692307692282,0.575442247658689,0.7638604926985811],[0.2968028027199625,0.7,0.10158858654143549,0.04373465684704877,0.024847855960961382,0.029664822845900524,0.17307692307692282,0.5879292403746089,0.5617628735541135],[0.4135046413152922,0.7,0.12378495699245266,0.03228854095487091,0.03213955184115321,0.021730609612557104,0.17094017094017033,0.5900104058272635,1],[0.21497634515386,0.4,0.06343481679968585,0.03743998656538728,0.0919314580587262,0.007832882245799328,0.17094017094017033,0.5941727367325697,0.6110027595744817],[0.18188714638418785,0.42,0.05652306709778159,0.03883091535550967,0.06635443250974563,0.01242876568800312,0.1698717948717945,0.6024973985431834,0.49282703312559806],[0.22749341388394645,0.38,0.06765814286475394,0.03752456416713645,0.05297697506800909,0.008452380898586588,0.16880341880341862,0.6024973985431834,0.7167614712877943],[0.21419704555799232,0.88,0.08848203954469483,0.03837403306537237,0.03242000168269905,0.02523502998615114,0.16880341880341862,0.6212278876170655,0.48169453715577576],[0.22630032689204285,0.56,0.0760189387780688,0.031044420153035875,0.05510839386375747,0.02832877597558321,0.16666666666666616,0.6233090530697185,0.426246143767622],[0.14890829092012525,0.62,0.08581066680595553,0.06137941705510319,0.02041674846453712,0.023975553567235568,0.16559829059829032,0.6222684703433913,0.32305646958580697],[0.1599633108508848,0.86,0.07073639944930825,0.044223858825203695,0.027231679614101018,0.05536767808412418,0.1634615384615386,0.6181061394380851,0.28280821492567987],[0.1564116357015765,0.96,0.08397996340252502,0.03728132483662785,0.04913481223883109,0.05681746253536319,0.16559829059829032,0.6160249739854321,0.31235214653790083],[0.8535330547164868,0.96,0.1281402499000794,0.024645327906002275,0.022744482149367584,0.02305424213391142,0.16666666666666616,0.6118626430801244,1],[0.18939738762223968,0.62,0.06131380381440047,0.043330270072536835,0.06671901730375522,0.010671872470558737,0.16559829059829032,0.6077003121748182,0.8623402647393178],[0.07193004234424352,0.44,0.039663998019818056,0.04854106628242074,0.0333735311439549,0.009620514146718839,0.16452991452991444,0.6056191467221638,0.625346552458676],[0.10580543716638392,0.6,0.04123790324437941,0.034784640548329304,0.016855035476904954,0.04108909147333524,0.1634615384615386,0.6077003121748182,0.464781706740084],[0.1043640777368588,0.66,0.031750540357027894,0.04188966652943599,0.09880247917659926,0.04380623617669435,0.1634615384615386,0.6108220603537972,0.35431309288569285],[0.15877022385898126,0.9,0.05681301470817189,0.04522928146817311,0.02512830580250722,0.011991869383635174,0.1634615384615386,0.604578563995838,0.5302921637932695],[0.09307457828167887,0.42,0.02246557623482012,0.04045666149412547,0.07768460610819755,0.03856864603612015,0.16239316239316198,0.6108220603537972,0.38449928388078813]]\")}},[[151,1,2]]]);","name":"static/js/main.aee44c32.chunk.js","map":{"version":3,"sources":["static/js/main.aee44c32.chunk.js"],"names":["this","push","150","module","exports","__webpack_require__","151","__webpack_exports__","r","react","react_default","n","react_dom","react_dom_default","slicedToArray","src","jsx_runtime","components_AxisView","props","attrPosition","center","radius","margin","width","setCircleUpdate","AxisSvg","Object","svgSize","drag","on","e","name","getAttribute","select","concat","style","deltaX","x","tan","y","subject","Math","cos","atan","sin","updateCircle","updateText","updateLine","preState","selectAll","data","join","attr","d","i","call","_","textX","textY","text","lineSvg","lineData","map","arcSvg","current","append","arcGenerator","innerRadius","outerRadius","startAngle","endAngle","PI","drawBigCircle","drawCircle","drawText","drawLine","children","ref","height","knn","k","knnArr","length","_knn","j","dist","_k","pow","sqrt","sort","a","b","slice","colormap","trust","conti","powScale","exponent","aScale","domain","range","bScale","components_ProjectionView","xExtent","yExtent","newPosition","pointPosition","pointData","circleUpdate","pViewSvg","isUpdate","_useState","_useState2","checkVis","setCheckVis","updateData","pointX","pointY","forEach","updatePoint","xScale","yScale","transition","duration","drawPoint","voronoiSvg","delaunayPosition","tncValue","raw","emb","console","log","kSum","Array","fill","reduce","acc","curr","rawKnnArr","embKnnArr","rawKnn","embKnnSet","Set","has","embKnn","rawKnnSet","tnc","voronoi","from","render","renderCell","drawVoronoi","remove","onClick","components_LegendView","lViewSvg","svg","rectSvg","positionX","positionY","textSvg","src_App","_useState3","angle","_useState4","className","StrictMode","document","getElementById","16","JSON","parse","32"],"mappings":"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"},"input":"(this[\"webpackJsonpinfovis_assn3\"] = this[\"webpackJsonpinfovis_assn3\"] || []).push([[0],{\n\n/***/ 150:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 151:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(2);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(31);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/d3/src/index.js + 171 modules\nvar src = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/components/AxisView.js\nvar AxisView_AxisView=function AxisView(props){var attrPosition=props.attrPosition,center=props.center,radius=props.radius,margin=props.margin,width=props.width,setCircleUpdate=props.setCircleUpdate;var AxisSvg=Object(react[\"useRef\"])(null);var svgSize=margin*2+width;var drag=src[\"d\" /* drag */]().on('drag',handleDrag).on('end',dragEnded);Object(react[\"useEffect\"])(function(){drawBigCircle();drawCircle();drawText();drawLine();},[]);// drag handler\nfunction handleDrag(e){var name=this.getAttribute(\"class\");src[\"i\" /* select */](\".lineSvg\").select(\".\".concat(name)).style('stroke',\"red\");src[\"i\" /* select */](\".textSvg\").select(\".\".concat(name)).style('fill',\"red\");src[\"i\" /* select */](this).style(\"fill\",\"red\");var deltaX=e.x-center;var deltaY=e.y-center;var tan=deltaY/deltaX;if(deltaX>=0){e.subject[0]=center+radius*Math.cos(Math.atan(tan));e.subject[1]=center+radius*Math.sin(Math.atan(tan));}else{e.subject[0]=center-radius*Math.cos(Math.atan(tan));e.subject[1]=center-radius*Math.sin(Math.atan(tan));}updateCircle();updateText();updateLine();setCircleUpdate(function(preState){return!preState;});}// dragend handler\nfunction dragEnded(e){src[\"i\" /* select */](this).style(\"fill\",\"black\");var name=this.getAttribute(\"class\");src[\"i\" /* select */](\".lineSvg\").select(\".\".concat(name)).style('stroke',\"black\");src[\"i\" /* select */](\".textSvg\").select(\".\".concat(name)).style('fill',\"black\");}// draw star coordinate\nfunction drawBigCircle(){var svg=src[\"i\" /* select */](AxisSvg.current);var arcSvg=svg.append(\"g\").attr(\"transform\",\"translate(\".concat(margin+radius,\",\").concat(radius+margin,\")\")).attr(\"class\",\"arcSvg\");var arcGenerator=src[\"b\" /* arc */]().innerRadius(radius).outerRadius(radius).startAngle(0).endAngle(Math.PI*2);var path=arcSvg.append(\"path\").attr(\"d\",arcGenerator).attr(\"fill\",\"white\").style(\"stroke\",\"grey\").style(\"stroke-width\",\"3px\").style(\"stroke-dasharray\",\"5,5\");}// draw axis handle\nfunction drawCircle(){var svg=src[\"i\" /* select */](AxisSvg.current);// set circles\nvar circleSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"circleSvg\");updateCircle();}// draw axis\nfunction drawLine(){var svg=src[\"i\" /* select */](AxisSvg.current);var lineSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"lineSvg\");updateLine();}// render attribute text\nfunction drawText(){var svg=src[\"i\" /* select */](AxisSvg.current);var textSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"textSvg\");updateText();}// update axis handle\nfunction updateCircle(){var circleSvg=src[\"i\" /* select */](\".circleSvg\");circleSvg.selectAll(\"circle\").data(attrPosition).join(\"circle\").attr(\"cx\",function(d){return d[0];}).attr(\"cy\",function(d){return d[1];}).attr(\"r\",7).attr(\"fill\",\"black\").attr(\"class\",function(d,i){return\"attr\".concat(i);}).call(drag).on(\"mouseover\",function(d){src[\"i\" /* select */](this).style(\"fill\",\"red\");var name=this.getAttribute(\"class\");src[\"i\" /* select */](\".lineSvg\").select(\".\".concat(name)).style('stroke',\"red\");src[\"i\" /* select */](\".textSvg\").select(\".\".concat(name)).style('fill',\"red\");}).on(\"mouseout\",function(d){src[\"i\" /* select */](this).style(\"fill\",\"black\");var name=this.getAttribute(\"class\");src[\"i\" /* select */](\".lineSvg\").select(\".\".concat(name)).style('stroke',\"black\");src[\"i\" /* select */](\".textSvg\").select(\".\".concat(name)).style('fill',\"black\");});}// update attribute text\nfunction updateText(){var textSvg=src[\"i\" /* select */](\".textSvg\");textSvg.selectAll(\"text\").data(attrPosition).join(\"text\").attr(\"class\",function(_,i){return\"attr\".concat(i);}).attr(\"transform\",function(d){var textX=d[0];var textY=d[1];textX>center?textX+=20:textX-=80;textY>center?textY+=20:textY-=20;return\"translate(\".concat(textX,\",\").concat(textY,\")\");}).text(function(d){return d[2];});}// update axis\nfunction updateLine(){var lineSvg=src[\"i\" /* select */](\".lineSvg\");var lineData=attrPosition.map(function(e){return[[center,center],[e[0],e[1]]];});lineSvg.selectAll(\"line\").data(lineData).join(\"line\").attr(\"x1\",function(d){return d[0][0];}).attr(\"y1\",function(d){return d[0][1];}).attr(\"x2\",function(d){return d[1][0];}).attr(\"y2\",function(d){return d[1][1];}).attr(\"class\",function(_,i){return\"attr\".concat(i);}).attr(\"stroke\",\"black\").style(\"stroke-width\",\"1px\");}return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"svg\",{ref:AxisSvg,width:svgSize,height:svgSize-margin})});};/* harmony default export */ var components_AxisView = (AxisView_AxisView);\n// CONCATENATED MODULE: ./src/utils/tnc.js\n// Implementation of the Trustworthiness & Continuity Metric\nfunction knn(data,k){var knnArr=[];for(var i=0;i<data.length;i++){var _knn=[];for(var j=0;j<data.length;j++){var dist=0;for(var _k=0;_k<data[0].length;_k++){dist+=Math.pow(data[i][_k]-data[j][_k],2);}_knn.push([Math.sqrt(dist),j]);}_knn.sort(function(a,b){return a[0]-b[0];});_knn=_knn.slice(1,k+2).map(function(d){return d[1];});knnArr.push(_knn);}return knnArr;}function tnc(raw,emb){var k=10;console.log(raw,emb);var kSum=Array(k).fill(0).reduce(function(acc,curr,i){return acc+i+1;},0);var rawKnnArr=knn(raw,k);var embKnnArr=knn(emb,k);var trustArr=rawKnnArr.map(function(rawKnn,i){var embKnnSet=new Set(embKnnArr[i]);var trust=rawKnn.reduce(function(acc,curr,i){if(embKnnSet.has(curr))return acc+(k-i);else return acc;},0)/kSum;return trust;});var contiArr=embKnnArr.map(function(embKnn,i){var rawKnnSet=new Set(rawKnnArr[i]);var conti=embKnn.reduce(function(acc,curr,i){if(rawKnnSet.has(curr))return acc+(k-i);else return acc;},0)/kSum;return conti;});return{\"trust\":trustArr,\"conti\":contiArr};}\n// CONCATENATED MODULE: ./src/utils/colormap.js\n// implementation of the CheckViz Colormap\nfunction colormap(trust,conti){var cScale=1.3;trust=1-trust;conti=1-conti;var powScale=src[\"h\" /* scalePow */]().exponent(1.5145);var aScale=src[\"g\" /* scaleLinear */]().domain([1,-1]).range([30*cScale,-30*cScale]);//30\nvar bScale=src[\"g\" /* scaleLinear */]().domain([1,-1]).range([20*cScale,-20*cScale]);// 20   \nreturn src[\"c\" /* color */](src[\"f\" /* lab */](powScale(1-(trust+conti)/2)*100,aScale(trust-conti),bScale(conti-trust)));}\n// CONCATENATED MODULE: ./src/components/ProjectionView.js\nvar ProjectionView_ProjectionView=function ProjectionView(props){var attrPosition=props.attrPosition,pointData=props.pointData,center=props.center,circleUpdate=props.circleUpdate;var pViewSvg=Object(react[\"useRef\"])(null);var margin=40;var width=600;var svgSize=margin*2+width;var isUpdate=Object(react[\"useRef\"])(null);var _useState=Object(react[\"useState\"])(false),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),checkVis=_useState2[0],setCheckVis=_useState2[1];var xExtent,yExtent,newPosition,pointPosition;// first render & update\nObject(react[\"useEffect\"])(function(){if(!isUpdate.current){updateData();drawPoint();isUpdate.current=true;}else{updateData();updatePoint();setCheckVis(false);}},[circleUpdate]);// checkVis render & remove\nObject(react[\"useEffect\"])(function(){if(checkVis){updateData();drawVoronoi();}else src[\"i\" /* select */](\".voronoiSvg\").remove();},[checkVis]);// set projection\nfunction drawPoint(){var svg=src[\"i\" /* select */](pViewSvg.current);var pointSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"pointSvg\");updatePoint();}// update projection position by attribute position\nfunction updateData(){newPosition=pointData.map(function(d){var pointX=0;var pointY=0;d.forEach(function(e,i){pointX+=e*(attrPosition[i][0]-center);pointY+=e*(attrPosition[i][1]-center);});return[pointX,pointY];});pointPosition=newPosition;}// update projection\nfunction updatePoint(){xExtent=src[\"e\" /* extent */](pointPosition.map(function(d){return d[0];}));yExtent=src[\"e\" /* extent */](pointPosition.map(function(d){return d[1];}));var xScale=src[\"g\" /* scaleLinear */]().domain(xExtent).range([margin,margin+width]);var yScale=src[\"g\" /* scaleLinear */]().domain(yExtent).range([margin,margin+width]);var pointSvg=src[\"i\" /* select */](\".pointSvg\");pointSvg.selectAll(\"circle\").data(pointPosition).join(\"circle\").transition().duration(10).attr(\"cx\",function(d){return xScale(d[0]);}).attr(\"cy\",function(d){return yScale(d[1]);}).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",function(d,i){return\"point\".concat(i);});}// draw voronoi graph\nfunction drawVoronoi(){var svg=src[\"i\" /* select */](pViewSvg.current);var voronoiSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"voronoiSvg\");xExtent=src[\"e\" /* extent */](pointPosition.map(function(d){return d[0];}));yExtent=src[\"e\" /* extent */](pointPosition.map(function(d){return d[1];}));var xScale=src[\"g\" /* scaleLinear */]().domain(xExtent).range([margin,margin+width]);var yScale=src[\"g\" /* scaleLinear */]().domain(yExtent).range([margin,margin+width]);var delaunayPosition=pointPosition.map(function(e){return[xScale(e[0]),yScale(e[1])];});//console.log(tnc(pointData,delaunayPosition));\nvar tncValue=tnc(pointData,delaunayPosition);var voronoi=src[\"a\" /* Delaunay */].from(delaunayPosition).voronoi([0,0,svgSize,svgSize]);voronoiSvg.append(\"path\").attr(\"fill\",\"none\").attr(\"stroke\",\"#ccc\").attr(\"stroke-width\",1).attr(\"d\",voronoi.render());voronoiSvg.append(\"g\").attr(\"fill\",\"none\").attr(\"pointer-events\",\"all\").attr(\"class\",\"cell\").selectAll(\"path\").data(delaunayPosition).join(\"path\").attr(\"d\",function(d,i){return voronoi.renderCell(i);}).attr(\"fill\",function(_,i){return colormap(tncValue.trust[i],tncValue.conti[i]);});voronoiSvg.append(\"g\").selectAll(\"circle\").data(pointPosition).join(\"circle\").transition().duration(10).attr(\"cx\",function(d){return xScale(d[0]);}).attr(\"cy\",function(d){return yScale(d[1]);}).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",function(d,i){return\"point\".concat(i);});}// button handler\nvar clickHandler=function clickHandler(){checkVis?setCheckVis(false):setCheckVis(true);};return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"svg\",{ref:pViewSvg,width:svgSize,height:svgSize})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{onClick:clickHandler,children:checkVis?\"Disable CheckVis\":\"Enable CheckVis\"})})]});};/* harmony default export */ var components_ProjectionView = (ProjectionView_ProjectionView);\n// CONCATENATED MODULE: ./src/components/LegendView.js\nvar LegendView_LegendView=function LegendView(props){var lViewSvg=Object(react[\"useRef\"])(null);var margin=40;var width=200;var svgSize=width+2*margin;var num=50;var rectWidth=width/num;Object(react[\"useEffect\"])(function(){var svg=src[\"i\" /* select */](lViewSvg.current);var xScale=src[\"g\" /* scaleLinear */]().domain([margin,margin+width]).range([0,1]);var yScale=src[\"g\" /* scaleLinear */]().domain([margin,margin+width]).range([1,0]);// set color rects\nvar rectSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"rectSvg\");for(var i=0;i<num;i++){for(var j=0;j<num;j++){var positionX=margin+i*rectWidth;var positionY=margin+j*rectWidth;rectSvg.append(\"rect\").attr('x',positionX).attr('y',positionY).attr('width',rectWidth).attr('height',rectWidth).attr('stroke','none').attr('fill',colormap(1-xScale(positionX),1-yScale(positionY)));}}// set text\nvar textSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"colorTextSvg\");textSvg.append(\"text\").attr(\"transform\",\"translate(\".concat(margin+5,\",\").concat(margin+15,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"Missing Neighbors\");textSvg.append(\"text\").attr(\"transform\",\"translate(\".concat(margin+165,\",\").concat(margin+15,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"Both\");textSvg.append(\"text\").attr(\"transform\",\"translate(\".concat(margin+5,\",\").concat(margin+195,\")\")).attr(\"fill\",\"black\").attr(\"font-size\",\"12px\").text(\"No Distortions\");textSvg.append(\"text\").attr(\"transform\",\"translate(\".concat(margin+105,\",\").concat(margin+195,\")\")).attr(\"fill\",\"white\").attr(\"font-size\",\"12px\").text(\"False Neighbors\");},[]);return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"svg\",{ref:lViewSvg,width:svgSize,height:svgSize})});};/* harmony default export */ var components_LegendView = (LegendView_LegendView);\n// EXTERNAL MODULE: ./src/data/attr.json\nvar attr = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./src/data/raw.json\nvar raw = __webpack_require__(32);\n\n// EXTERNAL MODULE: ./src/App.css\nvar App = __webpack_require__(150);\n\n// CONCATENATED MODULE: ./src/App.js\nfunction App_App(){// AxisView Parameters\nvar radius=150;var margin=80;var width=360;var center=margin+radius;// ProjectionView Update State\nvar _useState=Object(react[\"useState\"])(),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),circleUpdate=_useState2[0],setCircleUpdate=_useState2[1];// Axis Position\nvar _useState3=Object(react[\"useState\"])(attr.map(function(d,i){var angle=Math.PI*2/attr.length;var xPosition=center+radius*Math.cos(angle*i);var yPosition=center+radius*Math.sin(angle*i);return[xPosition,yPosition,d];})),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),attrPosition=_useState4[0],setAttrPosition=_useState4[1];return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"Container\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_ProjectionView,{attrPosition:attrPosition,pointData:raw,center:center,circleUpdate:circleUpdate})}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"VerticalLayout\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_AxisView,{attrPosition:attrPosition,center:center,radius:radius,margin:margin,width:width,setCircleUpdate:setCircleUpdate})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_LegendView,{})})]})]});}/* harmony default export */ var src_App = (App_App);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App,{})}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"[\\\"MedInc\\\",\\\"HouseAge\\\",\\\"AveRooms\\\",\\\"AveBedrms\\\",\\\"Population\\\",\\\"AveOccup\\\",\\\"Latitude\\\",\\\"Longitude\\\",\\\"Price\\\"]\");\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"[[0.5396684183666433,0.78,0.12619872694859913,0.03396459448332646,0.008329360293911434,0.024548906815270877,0.5683760683760685,0.20083246618106063,0.8985208766412404],[0.05916470117653549,0.76,0.07316335728644284,0.04201243012395403,0.010769273915360238,0.02271760344300601,0.5651709401709402,0.1966701352757545,0.24534308425800846],[0.11019848002096522,1,0.06650369578833298,0.03747856856236093,0.025829430406371822,0.02134125789272633,0.5630341880341876,0.1977107180020803,0.26225591467370013],[0.19951448945531786,1,0.10486681748766087,0.04390574673673505,0.014835796617774911,0.032677151729601596,0.5630341880341876,0.19458896982309995,0.09162900529007645],[0.06897146246258673,0.3,0.04455771635339762,0.03170028818443804,0.01637827074627703,0.01559632036003638,0.5608974358974359,0.1956295525494272,0.27745605340172685],[0.13732914028772017,0.54,0.05593146622734762,0.04417752161383285,0.06391451888829683,0.01032276475743208,0.5608974358974359,0.19875130072840758,0.48148045069481754],[0.3762775685852609,0.78,0.12333004166359458,0.039288123122202465,0.02156659281487506,0.01568490362351857,0.5630341880341876,0.19979188345473484,0.7133360879124643],[0.40430476821009365,0.56,0.09669024947670633,0.006096209266238084,0.0028325433996129793,0.02190323383557547,0.5608974358974359,0.20603537981269407,0.9642454201553841],[0.11686045709714349,1,0.08502479285186777,0.027896253602305476,0.009395069691785624,0.014595324231753233,0.5598290598290593,0.19979188345473484,0.38235841927120695],[0.13957738513951534,0.94,0.06600425887523705,0.04181441262733111,0.04100176683400174,0.017377465233867528,0.5598290598290593,0.19979188345473484,0.2920139327468792],[0.17419070081791976,1,0.06287660634030852,0.0325932540487884,0.02717558964579185,0.0667089859110622,0.5576923076923076,0.20083246618106063,0.10254741479894071],[0.17712169487317417,0.74,0.06869451376822525,0.039078803537712425,0.030400762823569006,0.02124439063387435,0.5598290598290593,0.20291363163371517,0.2646108657442395],[0.15415649439318077,0.88,0.06046256294985667,0.021504940666420183,0.0382814033710071,0.022298757371346026,0.5576923076923076,0.20291363163371517,0.22350626524027994],[0.20964538420159726,1,0.09285208074220103,0.036196782962372526,0.033653980985500744,0.031347396613472384,0.5576923076923076,0.203954214360041,0.26867850850244385],[0.39888415332202315,0.64,0.1254353497437063,0.03170028818443804,0.011694758392461509,0.018779632833741546,0.5598290598290593,0.20603537981269407,0.6107886731135236],[0.09986069157666791,0.96,0.07965486758770332,0.03749912138890842,0.024735676024343047,0.047144327896776486,0.5555555555555551,0.20603537981269407,0.12117293690229737],[0.02077902373760362,0.52,0.08954492184623414,0.04755043227665707,0.01149844350337942,0.027137683601854555,0.5544871794871793,0.20499479708636825,0.10468827940852192],[0.05690266341153915,0.88,0.07966430547240637,0.04291731323431612,0.016714810556132036,0.037111586254340675,0.5544871794871793,0.20603537981269407,0.11603486183930244],[0.335864332905753,0.48,0.10773257457927339,0.024206411427891716,0.03356984603303699,0.019299192216693527,0.5555555555555551,0.21123829344432896,0.5191596678234471],[0.24425869988000162,0.82,0.08773504516275636,0.0333121672446637,0.022464032307821746,0.02943060018425724,0.5534188034188035,0.20811654526534862,0.16377614263296378],[0.2594102150315168,1,0.09465452438870484,0.031130821929627774,0.02086546821101046,0.01949315197885468,0.5683760683760685,0.1956295525494272,0.48897347682835185],[0.4264010151584116,1,0.13415496005821517,0.036794977356937014,0.033093081302409066,0.02126010365272325,0.5694444444444443,0.1977107180020803,0.7236122380384542],[0.16552185487096732,0.88,0.07564995723360214,0.03732597312984535,0.023249291864150097,0.02155488488986183,0.5683760683760685,0.19354838709677413,0.23956274981213913],[0.06215776334119529,1,0.042584705529090015,0.03740634005763689,0.09288498751998205,0.16391808256907237,0.5673076923076918,0.1977107180020803,0.30421686102149215],[0.12307416449428284,0.78,0.059663025588628064,0.028686528392255557,0.03331744117564574,0.016161426290932118,0.566239316239316,0.1956295525494272,0.2573319260716633],[0.0746058675052758,1,0.09286640190463404,0.04820539690856695,0.02383823653139636,0.021651432914820676,0.5651709401709402,0.1966701352757545,0.2584023583764539],[0.32502310312961197,1,0.10202713121249735,0.03133310337921289,0.03413074571612867,0.02139611081704873,0.5555555555555551,0.20083246618106063,0.5502022046623749],[0.17026661701217913,1,0.06683478926257166,0.036085342457789694,0.02369801161062344,0.02358331119211534,0.5566239316239318,0.1956295525494272,0.4022684601403123],[0.1505772334174701,1,0.06486142165432972,0.037031054134735925,0.02249207729197633,0.010543640983945354,0.5555555555555551,0.19979188345473484,0.4452998387928948],[0.30897504862001907,0.68,0.11204202830062059,0.03692561041264212,0.033934430827046586,0.027718837574352936,0.5502136752136751,0.21748178980228966,0.4465843575586436],[0.1724183114715659,0.6,0.08124875884890594,0.03745567191821209,0.04100176683400174,0.016302975980442596,0.5491452991452992,0.21748178980228966,0.4074065352033073],[0.16070123170714884,0.94,0.07076796974541677,0.03738163853437628,0.020837423226855875,0.013350405970004649,0.5523504273504268,0.20811654526534862,0.296937921348916],[0.1594874553454435,0.54,0.06905820012960842,0.04010317122709055,0.05606192332501332,0.015530091339587326,0.551282051282051,0.2091571279916744,0.2665376438928626],[0.21067295623508644,0.68,0.09655681731366324,0.02550597899897314,0.018145104748015818,0.024931484665504922,0.5491452991452992,0.2091571279916744,0.3463918938302423],[0.26097571067985265,0.56,0.10289939897201834,0.0465985959473593,0.025352665675743895,0.02195337082036714,0.5470085470085467,0.2091571279916744,0.3864260620294112],[0.41379429249251737,0.36,0.11471834896177888,0.013293669238635305,0.0016266090809658692,0.02698259559159839,0.5480769230769226,0.2216441207075958,0.6574595216023943],[0.14034978827878236,0.7,0.07745610529049432,0.04337561753808152,0.030400762823569006,0.022949082385296655,0.5470085470085467,0.2143600416233093,0.3020759964119109],[0.23225196893835948,0.76,0.09450873282819768,0.03200029091173556,0.024931990913425135,0.031093763855710006,0.5459401709401709,0.21123829344432896,0.3234846425077232],[0.17352174452766167,0.58,0.07176986109554423,0.038126022275878184,0.060464985837283,0.03237221025488109,0.5438034188034184,0.21748178980228966,0.27595744817502],[0.22876925835505715,0.32,0.08600457830958111,0.035854231394629045,0.15671537145581513,0.031115680643167838,0.5416666666666667,0.2143600416233093,0.3303354092583831],[0.1366119088012579,0.5,0.06223776791293692,0.035817208727871565,0.05617410326163166,0.03195501777058077,0.5416666666666667,0.21748178980228966,0.2669658168147788],[0.28216162535689165,0.44,0.08646911856159377,0.034219516384525826,0.038589898196707516,0.0352762883907075,0.5416666666666667,0.21748178980228966,0.3097831090064033],[0.3325954124770693,0.32,0.09566312926865472,0.0212698707818165,0.03256022660347197,0.04991653335440235,0.5384615384615384,0.21852237252861545,0.42560388438474767],[0.3599467593550434,0.26,0.11350536179747374,0.03816510545282076,0.04913481223883109,0.036997264601204546,0.536324786324786,0.22892819979188375,0.536500671161055],[0.31034744348353815,0.32,0.09785503746581911,0.03503028756117613,0.07336567854839161,0.02783048704084171,0.5341880341880342,0.2258064516129034,0.5069567395488341],[0.29310630198204163,0.66,0.09448979572186615,0.0333121672446637,0.03724373895728749,0.038937168803104334,0.5309829059829059,0.2278876170655565,0.3513158824322791],[0.32687135349857244,0.48,0.09931336790654183,0.03260724465837974,0.06526067812771685,0.03750589082534986,0.52991452991453,0.22892819979188375,0.4089051404300141],[0.2093143542847685,0.58,0.0889043373770072,0.04298344160601768,0.019463219003281265,0.03435554430343108,0.5320512820512817,0.22268470343392308,0.37978938173970944],[0.37479483041613215,0.42,0.13274179663431496,0.03456285601380201,0.02526853072328014,0.03536165725402602,0.5480769230769226,0.2341311134235172,0.4853340069920638],[0.3095129722348657,0.52,0.11614926657776206,0.0371737192378662,0.02322124687999551,0.03478960758768668,0.5459401709401709,0.23829344432882332,0.4206798957827108],[0.1989076012744652,0.54,0.08001765470320285,0.0319685557854347,0.053117199988782005,0.02756592977186971,0.5480769230769226,0.24973985431841744,0.32434098835155567],[0.2311968110784679,0.46,0.09420269272283134,0.048893664826845123,0.024539361135260958,0.024285641379347116,0.5448717948717943,0.24765868886576436,0.3427524239939542],[0.1594874553454435,0.52,0.09911365720254443,0.040828881200300565,0.0445634798216339,0.019691373950064345,0.6207264957264953,0.34235171696149763,0.17233960107128865],[0.08128163749465525,0.2,0.07232663159075672,0.032749837885210374,0.21011302128614298,0.01953347774086917,0.7670940170940171,0.23725286160249753,0.2573319260716633],[0.08136439497386243,1,0.07040398957969828,0.03046521202140799,0.00992792439072272,0.0226613571359993,0.7660256410256405,0.2414151925078037,0.13251951933307785],[0.1527151349636557,0.28,0.1132887350771729,0.054998940970327925,0.033036991334099895,0.027019899611882725,0.7820512820512822,0.25078043704474473,0.13358995163786844],[0.12461207431621633,0.44,0.09684818958806347,0.032745352630078856,0.017920744874779147,0.022086114456291744,0.7702991452991454,0.26742976066597224,0.13787168085703091],[0.1296464876346533,0.3,0.07878562586451306,0.02782990416191945,0.020332613512073366,0.017053494956441397,0.7670940170940171,0.26742976066597224,0.10897000862768436],[0.17026661701217913,0.44,0.09478223103466603,0.0311889932137213,0.012508062932944443,0.024083642784502386,0.7435897435897437,0.27367325702393297,0.11453625661259555],[0.13760499855174413,0.24,0.09870006354275104,0.035794034009580714,0.025633115517289733,0.03560692686392301,0.738247863247863,0.2726326742976057,0.04495815680120574],[0.09724693452504103,0.88,0.08342328012270636,0.03209326696358398,0.013966402108982808,0.016672545801072376,0.7264957264957262,0.2559833506763781,0.06636680289701799],[0.23095543509744698,0.1,0.1146110694034267,0.04645584833486257,0.08834170008693945,0.030379873619645132,0.5940170940170936,0.35379812695109175,0.20916247235608576],[0.18103888222231415,0.18,1,1,0.0015985640968112854,0.023136846749861602,0.6260683760683761,0.41311134235171687,0.09548256158732266],[0.3104577867891477,0.02,0.13184589301351937,0.05039149584035669,0.09964382870123678,0.029688082295914756,0.581196581196581,0.2528616024973978,0.33440305201658743],[0.12091557357829548,0.88,0.08525602141489765,0.04191246155929057,0.029811818156322743,0.022121463193718785,0.5822649572649569,0.2455775234131113,0.16377614263296378],[0.16586667770099722,0.7,0.08438145013160636,0.03856868395773295,0.038561853212552934,0.025288557325723358,0.581196581196581,0.24453694068678403,0.13787168085703091],[0.048447607619205246,0.68,0.09957158934605961,0.058137594160648925,0.022800572117676752,0.038128204796744,0.5854700854700852,0.23517169614984298,0.12267154212900422],[0.11322602446862803,0.2,0.07027302897416679,0.03699916333550246,0.02574529545390807,0.028739536686808096,0.5833333333333335,0.23517169614984298,0.19117920963560345],[0.19766623908635744,0.58,0.09606712392802194,0.03453629806177346,0.04529264940965309,0.03862579416429986,0.586538461538461,0.2268470343392292,0.14044071838852837],[0.3242438035337444,0.08,0.09843853792008558,0.036644044698388965,0.12205177104074937,0.02237336685663424,0.581196581196581,0.2154006243496351,0.3667301076212639],[0.29232010592957336,0.68,0.10457423565700565,0.03581275800295974,0.025941610342990157,0.02478879346730952,0.5758547008547009,0.21852237252861545,0.32862271757071815],[0.15892194590419445,0.28,0.08683448664173325,0.030697114507715322,0.019519308971590432,0.003890187178392466,0.5801282051282052,0.21852237252861545,0.11689120768313492],[0.16177018248024164,0.76,0.08061888009665759,0.03994751763079591,0.02050088341700087,0.01442832300151867,0.5790598290598286,0.22268470343392308,0.2838786472304705],[0.3195404201321361,0.4,0.10402696749762878,0.03872250392149711,0.034944050256611604,0.027062782284340378,0.5779914529914527,0.2258064516129034,0.3731527014500076],[0.23073474848622777,0.66,0.09336937154925559,0.027668580709609262,0.03166278711052528,0.030984419610704046,0.5769230769230768,0.2195629552549427,0.27167571895585757],[0.3537399484145046,0.44,0.11479039967081779,0.030093854661578007,0.06784081666993858,0.028477050742403642,0.5747863247863243,0.22060353798126853,0.4249616250018733],[0.3927600998606916,0.48,0.11198478942084773,0.02857653715896422,0.021622682783184227,0.03152969593946836,0.5726495726495726,0.21644120707596237,0.49668058942284427],[0.38703604088219473,0.54,0.11991111480897013,0.0369602917548647,0.028325433996129794,0.01924207804226781,0.566239316239316,0.2216441207075958,0.7657872708472043],[0.40649784140908396,0.04,0.09811070000515662,0.04080843612731071,0.15671537145581513,0.01697745529299657,0.5576923076923076,0.22996878251820957,0.6932119605824009],[0.5472545206273017,0.24,0.15038716423276655,0.0296822327032006,0.0332052612390274,0.03755655372322827,0.5673076923076918,0.22268470343392308,0.8745431930139306],[0.2500034482283003,0.56,0.07734016131620308,0.0385130694170585,0.03463555543091118,0.010300902245502076,0.5694444444444443,0.21227887617065475,0.47998184546811073],[0.4622763823947256,0.34,0.13096170085921258,0.03557377845416571,0.05221976049583532,0.02644062532585229,0.5630341880341876,0.21331945889698203,0.7214713734288729],[0.32896097984855377,0.12,0.13488012176700376,0.038533322743878926,0.09254844771012705,0.038869443420694816,0.5790598290598286,0.2414151925078037,0.3667301076212639],[0.3951462738444987,0.48,0.13121200931659377,0.02853025936599424,0.014246851950528648,0.03264807990472553,0.5747863247863243,0.23100936524453683,0.5540557609596211],[0.2431069916277017,0.28,0.0814286644053604,0.037784497038734724,0.07796505594974339,0.028648288729008983,0.581196581196581,0.19458896982309995,0.30036330472424594],[0.38390504958552296,0.16,0.11633322329622736,0.02913769003779185,0.2030737302633424,0.035577228797466526,0.5779914529914527,0.1966701352757545,0.5127370739947035],[0.23524503110301928,0.04,0.07282615747636027,0.05228581918132227,0.04391844518607847,0.009333953924948523,0.5801282051282052,0.1904266389177938,0.17041282292266557],[0.1267775616888043,0.34,0.06315563683100132,0.03670559684513878,0.039627562610427124,0.02563220620172306,0.5779914529914527,0.18938605619146653,0.18796791272123162],[0.1832526447911063,0.82,0.08290861320811153,0.034727371406294186,0.02193117760888465,0.016261681997893504,0.5747863247863243,0.1904266389177938,0.2327119830614792],[0.06993006993006994,0.72,0.05598477532238822,0.019064508978053646,0.019743668844827103,0.024417011094875506,0.5758547008547009,0.18730489073881346,0.10447419294756378],[0.04310975021034193,0.68,0.0713699369425666,0.04747838616714699,0.03959951762627254,0.038735067400971955,0.571581196581196,0.1904266389177938,0.13037865472349663],[0.38398091060812956,0.6,0.11407613745140052,0.03030630157046438,0.042039431247721346,0.023081652219617596,0.5726495726495726,0.19354838709677413,0.6180676127860998],[0.32200935159515043,0.72,0.1234040644226408,0.04327340926764558,0.02467958605603388,0.02132614387687079,0.571581196581196,0.19458896982309995,0.4930411195865562],[0.11266741148397953,0.34,0.10269671749254113,0.04547815195364609,0.022884707070140505,0.03286017403519626,1,0,0.09013040006336959],[0.09668142508379195,0.46,0.10744315842800768,0.07903359519955784,0.01340550242589113,0.019381485440876853,0.6816239316239312,0.4349635796045778,0.16441840201583813],[0.10157101281361636,0.38,0.09133284910851236,0.06597365170852204,0.019968028718063774,0.021299727787211776,0.6773504273504269,0.43288241415192474,0.1738382062979955],[0.1625012068799051,0.2,0.10029291787887012,0.04330410720155329,0.02930700844154023,0.030193401559493117,0.6698717948717945,0.34235171696149763,0.2040243972930908],[0.23473469331457497,0.18,0.10832939660404776,0.04571515243440012,0.02908264856830356,0.02932549195382452,0.6517094017094012,0.3329864724245581,0.31663387575706325],[0.11505358546778666,0.66,0.08902857467477135,0.0324135446685879,0.029026558599994392,0.0264350156169247,0.6623931623931619,0.3631633714880328,0.22521895692794494],[0.24708624708624707,0.12,0.09387394659216941,0.02879994079035623,0.04705948341139187,0.02810350332938761,0.6431623931623928,0.34131113423517184,0.2950111432002929],[0.13824636901559978,0.26,0.06410511933933633,0.04746138652332998,0.025212440754970974,0.02534673208497243,0.4465811965811966,0.455775234131113,0.12288562858996235],[0.05727507206797148,0.52,0.09733713184769037,0.03911950456802992,0.026278150152845164,0.04163955478019411,0.4423076923076924,0.4536940686784599,0.03939190881629455],[0.30480269237665686,0.5,0.10896580128387208,0.022810424758802156,0.03348571108057324,0.0264350156169247,0.44551282051282,0.4672216441207071,0.1819734918144042],[0.16561150880677505,0.34,0.10694199852297905,0.04193841953587137,0.03455142047844743,0.03356804234583616,0.4369658119658116,0.4599375650364206,0.12117293690229737],[0.09635729162356381,0.78,0.08905731977503835,0.03778674351585015,0.030344672855259838,0.03246612587915421,0.4487179487179483,0.4516129032258068,0.07278939672576168],[0.07964717728031338,0.66,0.08082367126280096,0.04059745846489362,0.046302268839218105,0.04309860350464354,0.44764957264957245,0.45785639958376606,0.03532426605809022],[0.1842733203679949,0.74,0.09978806492817663,0.03734984449453592,0.024567406119415543,0.03289743732928896,0.44764957264957245,0.46097814776274637,0.0749302613353429],[0.14983931256120606,0.6,0.08353327412883008,0.03339851790860436,0.027484084471492275,0.024713063943866204,0.4497863247863249,0.45889698231009335,0.08028242285929595],[0.20183169887311897,0.82,0.11021371357155031,0.03677233429394812,0.02425891129371512,0.02090982630384469,0.4497863247863249,0.4526534859521326,0.11153904615918182],[0.25323788637398104,0.3,0.11248981122336285,0.03838469399968696,0.03160669714221612,0.04701490490751279,0.4487179487179483,0.44432882414151886,0.2001708409958446],[0.4288354643384229,0.26,0.13084058386370556,0.026090405724832438,0.02958745828308607,0.03409787801201131,0.4561965811965808,0.44849115504682646,0.27274615126064816],[0.38741534599522764,0.28,0.1387708709402346,0.030947510892459302,0.0277925792971927,0.027048886508911053,0.4561965811965808,0.4516129032258068,0.23934866335118105],[0.24476214121184536,0.34,0.10760648891360894,0.03950387580783892,0.0645034635555431,0.015380975420609226,0.4561965811965808,0.4526534859521326,0.1993144951520121],[0.05783368505261997,0.44,0.06604792682418667,0.034406910461505194,0.07681521159940545,0.044921350564357206,0.45085470085470075,0.4495317377731523,0.05544839338815373],[0.12110867436311222,0.48,0.07057734800856778,0.040816174164937054,0.024791765992652214,0.020542147184814574,0.4519230769230766,0.4547346514047857,0.06765132166276673],[0.21152122039696006,0.52,0.10658754975276216,0.03844503035133976,0.01789269989062456,0.020465091762879,0.4540598290598291,0.45681581685744027,0.11260947846397247],[0.15282547826926526,0.6,0.09056573643904933,0.038658888029802496,0.043329500518832206,0.03724022715925426,0.4540598290598291,0.46409989594172674,0.07514434779630103],[0.3064302561343981,0.04,0.11234894006475028,0.03982448264376639,0.01674285554028662,0.03593357773746155,0.4540598290598291,0.4672216441207071,0.17448046568086986],[0.17816305981986458,0.8,0.10556477627431443,0.02870161227509931,0.0166026306195137,0.029016795709490582,0.4423076923076924,0.4713839750260147,0.21494280680195504],[0.14414283940911157,0.38,0.10154917137387193,0.03382037115218709,0.030709257649269427,0.04474560578539686,0.44337606837606824,0.4828303850156088,0.0779274717887566],[0.11863974290009795,0.22,0.09407637148142363,0.04414512788184438,0.038141178450234174,0.02753495682524212,0.44337606837606824,0.5109261186264304,0.14365201530290025],[0.13954979931311295,0.7,0.06404550338629492,0.025039527242960793,0.023950416468014695,0.04181701211766338,0.42948717948717907,0.4911550468262226,0.0655104570531855],[0.14177045833850568,0.8,0.08990081705213927,0.03235465193136452,0.037075469052359984,0.03521107071021086,0.42841880341880323,0.47450572320499507,0.07878381763258908],[0.18678363057061284,0.48,0.11938240169223525,0.04271583234119257,0.02179095268811173,0.03535237353743972,0.41452991452991406,0.45681581685744027,0.09013040006336959],[0.13378436159501247,0.18,0.06627113302942574,0.059811864498939694,0.03788877359284292,0.059926530286913034,0.3985042735042732,0.4047866805411031,0.11689120768313492],[0.0969434904346147,0.46,0.055307175485181256,0.03960801871622347,0.048237372745884396,0.049768237786541186,0.44764957264957245,0.393340270551509,0.058017430919651204],[0.09914346009020565,0.28,0.08996993908403882,0.03518566018377417,0.028213254059511455,0.027412632220923275,0.768162393162393,0.20083246618106063,0.08606275730516526],[0.08812981889904967,1,0.07158110853383667,0.02935625279051833,0.015873461031494517,0.015071483549297035,0.879273504273504,0,0.09419804282157393],[0.13793602846857284,0.6,0.07236205281408138,0.033565011018816746,0.023754101578932606,0.030422602045334687,0.8803418803418799,0.002081165452653072,0.08499232500037465],[0.23994841450462756,0.4,0.10186046547495632,0.030194165895132158,0.03289676641332698,0.02764138225263781,0.8803418803418799,0.014568158168574461,0.21622732556770377],[0.06835767782513345,0.34,0.09410379902925221,0.04827750310657537,0.028269344027820623,0.036600460086496596,0.9134615384615382,0.0551508844953175,0.05630473923198622],[0.15988055337167761,0.2,0.0921494712751885,0.03766982297241664,0.0316347421263707,0.023352978392526286,0.8931623931623932,0.007284079084286492,0.20124127330063518],[0.2028178921670046,0.6,0.09032454711315466,0.02819799005641231,0.025577025548980566,0.026522705061294206,0.8579059829059831,0.011446409989594114,0.13337586517691036],[0.08448848981393361,0.58,0.08684626908207753,0.056336445297135024,0.025016125865888885,0.02452418312132818,0.8205128205128205,0.0499479708636826,0.04581450264503823],[0.09716417704583385,0.36,0.0709776491711425,0.02270020636551242,0.030260537902796085,0.04306350240025643,0.045940170940170916,0.9001040582726318,0.06593862997510175],[0.08692983545054551,0.6,0.0701563107687064,0.04408028238664461,0.016770900524441204,0.047132318850387996,0.02670940170940171,0.9146722164412063,0.07642886656204977],[0.12012248106922663,0.32,0.08666034096358473,0.03284264091180517,0.03199932692038029,0.043439980663313914,0.02243589743589753,0.8990634755463061,0.09912203142361074],[0.1834319526627219,0.54,0.11360563540305631,0.04645062636005412,0.023081021959222594,0.04263562603209048,0.023504273504273383,0.8949011446409985,0.09269943759486707],[0.10776403084095391,0.08,0.07739842324856244,0.02961895613192444,0.07802114591805255,0.06788570263223659,0.011752136752136691,0.8990634755463061,0.07450208841342666],[0.05345443511123984,0.34,0.06675774090540788,0.06486045806158046,0.039431247721345035,0.020516108390682117,0.025641025641025095,1,0.04966805894228444],[0.04463386711907422,0.24,0.11449632865076616,0.10894183545074482,0.011526488487534004,0.014391734312578385,0.3675213675213673,0.8262226847034337,0],[0.056709562626722394,0.58,0.05847714359803087,0.04570859883877237,0.03892643800656253,0.01969699315587066,0.3044871794871789,0.534859521331946,0.03960599527725267],[0.18556295775230686,0.64,0.10533095362716749,0.03600906521921602,0.023249291864150097,0.02870674803422219,0.30341880341880306,0.5400624349635794,0.09269943759486707],[0.1788871877629274,0.08,0.08298518634858364,0.03536192575012715,0.06436323863477017,0.02306565044404265,0.3044871794871789,0.5473465140478659,0.14536470699056522],[0.06035089171183846,0.66,0.06296066637331657,0.034693777867714284,0.028493703901057297,0.02385044749547314,0.3012820512820513,0.5400624349635794,0.052665269395698135],[0.06744734555385443,0.84,0.08128521481359068,0.04348965155881583,0.00950724962840396,0.03358975892237184,0.3002136752136747,0.5359001040582718,0.07086261857713858],[0.08423332091971146,0.84,0.08114566288843587,0.04399930709752602,0.04195529629525759,0.02884130485953609,0.3002136752136747,0.534859521331946,0.06144281429498117],[0.10077792030454753,0.6,0.06926388221576255,0.0409685927807356,0.023810191547241774,0.04747180441463287,0.3002136752136747,0.5411030176899067,0.04388772449641513],[0.18450779989241528,0.5,0.08631708216300837,0.03201941860240219,0.06133438034607511,0.0229256469701839,0.298076923076923,0.5327783558792915,0.11153904615918182],[0.2019765244617316,0.64,0.10254232057807207,0.03639662717472516,0.03786072860868834,0.030014102253614193,0.2970085470085472,0.534859521331946,0.08242328746887717],[0.25161721907284035,0.16,0.07893705060126706,0.01685795672236012,0.011834983313234428,0.025113264430182605,0.2927350427350422,0.5338189386056187,0.14986052267068578],[0.1775354822692101,0.42,0.10934977655477357,0.04387689807051877,0.05519252881622122,0.03802085565881214,0.2895299145299146,0.4849115504682619,0.053521615239530626],[0.11472945200755852,0.68,0.0841159331411883,0.03551960001388842,0.025436800628207645,0.04826228040941601,0.3141025641025639,0.518210197710717,0.16591700724254502],[0.14224631384394698,0.56,0.11585691095494081,0.05189870189487645,0.011105813725215245,0.0479166264817784,0.34188034188034144,0.5223725286160246,0.2641826928223232],[0.3900911711562599,0.22,0.11229501078735828,0.03588975358326244,0.014919931570238663,0.022515682504599753,0.3076923076923072,0.5442247658688856,0.3667301076212639],[0.242534585729852,0.06,0.08072842697267511,0.04973665904799762,0.013882267156519057,0.018274630071432606,0.33012820512820473,0.6732570239334026,0.11689120768313492],[0.3156025434131943,0.18,0.10316125859996222,0.038126022275878184,0.020753288274392125,0.025126134071738866,0.3183760683760681,0.6576482830385009,0.13937028608373778],[0.31416118398366916,0,0.10976586831117746,0.04604982691881384,0.025184395770816388,0.028048022691642225,0.2467948717948713,0.6212278876170655,0.16741561246925185],[0.09818485262272245,0.54,0.08615008805317276,0.03508332289186819,0.024791765992652214,0.045264968147548615,0.2745726495726496,0.5452653485952128,0.15713946234326195],[0.1839147046247638,0.24,0.07877490888993872,0.03947805405868678,0.019968028718063774,0.028227911956480604,0.40064102564102566,0.455775234131113,0.2001708409958446],[0.1640598060716404,0.72,0.10201124300485856,0.03719028222755301,0.037944863561152085,0.024759645228863484,0.40491452991452986,0.4693028095733602,0.11260947846397247],[0.2476517565274962,0.28,0.08942419022999243,0.0280237083692326,0.02880219872675772,0.027660014116967908,0.4027777777777774,0.4682622268470344,0.1282377901139154],[0.09310906056468188,0.24,0.07353249293406122,0.03544978463636082,0.02950332333062232,0.0506036925383066,0.3771367521367523,0.4786680541103012,0.041532773425875774],[0.1048882084385043,0.82,0.04669342978153976,0,0.0017107440334296212,0.03712296549296302,0.7072649572649571,0.1300728407908429,0.08477823853941652],[0.10632956786802941,0.44,0.12610782912409413,0.07967527789213669,0.027764534313038113,0.01875883016313507,0.6965811965811962,0.1352757544224763,0.09826568557977826],[0.12537758099888277,0.24,0.10796364497831003,0.07149426696915814,0.017191575286759964,0.018694651711264023,0.6816239316239312,0.1602497398543176,0.052665269395698135],[0.08161266741148399,0.26,0.09100879269316468,0.0228946525776497,0.004655467369660936,0.04414964534226158,0.686965811965812,0.13839750260145664,0.17341003337607927],[0.20259030909918482,0.4,0.10498210532295632,0.0544709177253724,0.012227613091398604,0.03834703499969776,0.6677350427350428,0.15608740894901146,0.10789957632289376],[0.21059709521247985,0.34,0.09943285816716482,0.03794242987326562,0.06181114507670303,0.030803094529135468,0.833333333333333,0.35900104058272664,0.15585494357751323],[0.27231348533123684,0.66,0.11390983968502301,0.04161878326055057,0.023950416468014695,0.0273600325283096,0.18055555555555533,0.6129032258064517,0.49025799559410066],[0.2892718721121088,0.56,0.10562927455973681,0.02813177544322551,0.04697534845892812,0.03720900363864417,0.18376068376068366,0.604578563995838,0.46092815044283786],[0.19217665963228095,0.66,0.06292646601606477,0.03029485668857626,0.032868721429172396,0.09127048389608759,0.18376068376068366,0.59729448491155,0.21494280680195504],[0.0680542337347071,0.66,0.06135644136840045,0.034921672403475205,0.09588580082452254,0.07480701521106767,0.1826923076923078,0.59729448491155,0.19503276593284966],[0.24521730734748487,0.14,0.09169973314075898,0.042005335427057214,0.022295762402894242,0.024212285685126872,0.18696581196581197,0.5941727367325697,0.32027334559335136],[0.49975172756237846,0.52,0.13262162481045625,0.03413877189093327,0.02364192164231427,0.029072154167653345,0.1848290598290595,0.5868886576482831,0.9456198980520275],[0.2966579771313499,0.56,0.09526545171157605,0.031030563786175268,0.02745603948733769,0.04411318369738012,0.1826923076923078,0.5931321540062439,0.3142789246865239],[0.3497537964993586,0.64,0.11025449407231322,0.035840402646426114,0.07000028044984155,0.03797626268876031,0.1826923076923078,0.5900104058272635,0.4131868696491765],[0.21032813340505652,0.46,0.07915347272757958,0.0385048720820707,0.12502453936113525,0.02475975166598945,0.18162393162393117,0.5900104058272635,0.48897347682835185],[0.21539013254989586,0.26,0.06977097238915482,0.03862448596315124,0.13929943629581848,0.018318888740488905,0.18055555555555533,0.5796045785639952,0.3433946833768286],[0.18899739313940497,0.5,0.06264024598079873,0.034402017291066275,0.02916678352076731,0.013794556495680578,0.17841880341880284,0.5858480749219559,0.422820760392292],[0.2770168687328451,0.48,0.0890153303452968,0.029590542042470323,0.04389040020192388,0.02769936359699339,0.17841880341880284,0.5889698231009362,0.6125013648011886],[0.24023116922525203,0.38,0.06858803219818829,0.0447120764935434,0.04986398182685027,0.04596156585830964,0.18055555555555533,0.5941727367325697,0.27745605340172685],[0.1948317954235114,0.74,0.08060827428445717,0.04078635804621964,0.02490394592927055,0.03158029781431753,0.177350427350427,0.5952133194588969,0.3110676277721521],[0.21787285692611139,0.68,0.08790189554108822,0.04119100582825146,0.04293687074066803,0.03680059235806113,0.177350427350427,0.599375650364203,0.32305646958580697],[0.25418959738486363,0.64,0.08964801134249684,0.035216341275317614,0.0536500546877191,0.041652022667881546,0.177350427350427,0.59729448491155,0.35474126580760906],[0.251348257265417,0.18,0.07046850413641159,0.0347079962501302,0.04170289143786634,0.01898816080897754,0.17414529914529867,0.6035379812695106,0.30721407147490587],[0.11984662280520268,0.5,0.04842430123749045,0.03390727027322804,0.09473595647418459,0.04520060445363234,0.17521367521367529,0.59729448491155,0.42560388438474767],[0.19666625287927064,0.48,0.06892057753004145,0.0372365610238936,0.04414280505931514,0.01482341161703156,0.17200854700854695,0.6004162330905303,0.4465843575586436],[0.12452931683700916,0.58,0.047212199471987126,0.037394950732540684,0.030681212665114845,0.04042038947518979,0.17307692307692282,0.6035379812695106,0.3577384762610228],[0.1857215762541206,0.48,0.06858803219818829,0.039354281307441195,0.07799310093389797,0.011096792199617045,0.17200854700854695,0.6004162330905303,0.4973228488057187],[0.26581012675687227,0.8,0.09141361393818362,0.0345821325648415,0.023473651737386768,0.013640354881394813,0.17094017094017033,0.6035379812695106,0.8242328746887718],[0.15143239403594436,0.42,0.054705926091485384,0.04234864753596742,0.06237204475979471,0.031317137354932564,0.17521367521367529,0.5910509885535893,0.3399693000014986],[0.11949490351857217,0.68,0.06043536613077317,0.02593659942363113,0.03312112628656365,0.01912760477843169,0.17307692307692282,0.5952133194588969,0.4026966330622285],[0.24465179790623576,0.64,0.09438385932115277,0.029902162594144285,0.033878340858737414,0.025243494584540335,0.17094017094017033,0.5962539021852227,0.742451846602769],[0.28965807368174235,0.68,0.10541544854306184,0.03719606678927781,0.029138738536612727,0.026901664469122233,0.17628205128205113,0.5879292403746089,0.40826288104713976],[0.11934318147335898,0.8,0.07619397346873033,0.028283490655576463,0.024090641388787616,0.02636924429907908,0.17521367521367529,0.5889698231009362,0.3658737617774314],[0.25345167652859957,0.68,0.09201665799972907,0.03901573930392374,0.0242869562778697,0.03572900876172566,0.17521367521367529,0.5827263267429755,0.33825660831383364],[0.3135336064330147,0.64,0.11296947334796696,0.03637737988378136,0.02439913621448804,0.03211516777465361,0.17628205128205113,0.5796045785639952,0.41704042594642277],[0.14592902166866661,0.34,0.04660278657278967,0.04055534317473387,0.055501023641921644,0.02456022799655332,0.17628205128205113,0.5785639958376694,0.3198451726714351],[0.26293430435442267,0.64,0.09496658810394255,0.03170028818443804,0.009647474549176879,0.03153773053608171,0.17414529914529867,0.5775234131113421,0.37936120881779317],[0.4343250437924994,0.62,0.1307345650142138,0.03560854289210848,0.056538688055641245,0.029348529374193338,0.17307692307692282,0.575442247658689,0.7638604926985811],[0.2968028027199625,0.7,0.10158858654143549,0.04373465684704877,0.024847855960961382,0.029664822845900524,0.17307692307692282,0.5879292403746089,0.5617628735541135],[0.4135046413152922,0.7,0.12378495699245266,0.03228854095487091,0.03213955184115321,0.021730609612557104,0.17094017094017033,0.5900104058272635,1],[0.21497634515386,0.4,0.06343481679968585,0.03743998656538728,0.0919314580587262,0.007832882245799328,0.17094017094017033,0.5941727367325697,0.6110027595744817],[0.18188714638418785,0.42,0.05652306709778159,0.03883091535550967,0.06635443250974563,0.01242876568800312,0.1698717948717945,0.6024973985431834,0.49282703312559806],[0.22749341388394645,0.38,0.06765814286475394,0.03752456416713645,0.05297697506800909,0.008452380898586588,0.16880341880341862,0.6024973985431834,0.7167614712877943],[0.21419704555799232,0.88,0.08848203954469483,0.03837403306537237,0.03242000168269905,0.02523502998615114,0.16880341880341862,0.6212278876170655,0.48169453715577576],[0.22630032689204285,0.56,0.0760189387780688,0.031044420153035875,0.05510839386375747,0.02832877597558321,0.16666666666666616,0.6233090530697185,0.426246143767622],[0.14890829092012525,0.62,0.08581066680595553,0.06137941705510319,0.02041674846453712,0.023975553567235568,0.16559829059829032,0.6222684703433913,0.32305646958580697],[0.1599633108508848,0.86,0.07073639944930825,0.044223858825203695,0.027231679614101018,0.05536767808412418,0.1634615384615386,0.6181061394380851,0.28280821492567987],[0.1564116357015765,0.96,0.08397996340252502,0.03728132483662785,0.04913481223883109,0.05681746253536319,0.16559829059829032,0.6160249739854321,0.31235214653790083],[0.8535330547164868,0.96,0.1281402499000794,0.024645327906002275,0.022744482149367584,0.02305424213391142,0.16666666666666616,0.6118626430801244,1],[0.18939738762223968,0.62,0.06131380381440047,0.043330270072536835,0.06671901730375522,0.010671872470558737,0.16559829059829032,0.6077003121748182,0.8623402647393178],[0.07193004234424352,0.44,0.039663998019818056,0.04854106628242074,0.0333735311439549,0.009620514146718839,0.16452991452991444,0.6056191467221638,0.625346552458676],[0.10580543716638392,0.6,0.04123790324437941,0.034784640548329304,0.016855035476904954,0.04108909147333524,0.1634615384615386,0.6077003121748182,0.464781706740084],[0.1043640777368588,0.66,0.031750540357027894,0.04188966652943599,0.09880247917659926,0.04380623617669435,0.1634615384615386,0.6108220603537972,0.35431309288569285],[0.15877022385898126,0.9,0.05681301470817189,0.04522928146817311,0.02512830580250722,0.011991869383635174,0.1634615384615386,0.604578563995838,0.5302921637932695],[0.09307457828167887,0.42,0.02246557623482012,0.04045666149412547,0.07768460610819755,0.03856864603612015,0.16239316239316198,0.6108220603537972,0.38449928388078813]]\");\n\n/***/ })\n\n},[[151,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/yanguangjing/Desktop/infovis-assignment-3/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/yanguangjing/Desktop/infovis-assignment-3/node_modules/postcss-loader/src/index.js??postcss!/Users/yanguangjing/Desktop/infovis-assignment-3/src/App.css","/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/AxisView.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/utils/tnc.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/utils/colormap.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/ProjectionView.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/LegendView.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/App.js","/Users/yanguangjing/Desktop/infovis-assignment-3/src/index.js"],"names":["AxisView","props","attrPosition","center","radius","margin","width","setCircleUpdate","AxisSvg","useRef","svgSize","drag","d3","on","handleDrag","dragEnded","useEffect","drawBigCircle","drawCircle","drawText","drawLine","e","name","getAttribute","select","style","deltaX","x","deltaY","y","tan","subject","Math","cos","atan","sin","updateCircle","updateText","updateLine","preState","svg","current","arcSvg","append","attr","arcGenerator","innerRadius","outerRadius","startAngle","endAngle","PI","path","circleSvg","lineSvg","textSvg","selectAll","data","join","d","i","call","_","textX","textY","text","lineData","map","knn","k","knnArr","length","j","dist","pow","push","sqrt","sort","a","b","slice","tnc","raw","emb","console","log","kSum","Array","fill","reduce","acc","curr","rawKnnArr","embKnnArr","trustArr","rawKnn","embKnnSet","Set","trust","has","contiArr","embKnn","rawKnnSet","conti","colormap","cScale","powScale","exponent","aScale","domain","range","bScale","ProjectionView","pointData","circleUpdate","pViewSvg","isUpdate","useState","checkVis","setCheckVis","xExtent","yExtent","newPosition","pointPosition","updateData","drawPoint","updatePoint","drawVoronoi","remove","pointSvg","pointX","pointY","forEach","xScale","yScale","transition","duration","voronoiSvg","delaunayPosition","tncValue","voronoi","from","render","renderCell","clickHandler","LegendView","lViewSvg","num","rectWidth","rectSvg","positionX","positionY","App","angle","xPosition","yPosition","setAttrPosition","ReactDOM","document","getElementById"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\n\nconst AxisView = (props) =>{\n  const { attrPosition, center, radius, margin, width, setCircleUpdate } = props;\n  \n  const AxisSvg = useRef(null);\n  const svgSize = margin * 2 + width;\n  let drag = d3.drag().on('drag',handleDrag).on('end',dragEnded);\n\n  useEffect(() =>{\n    drawBigCircle();\n    drawCircle();\n    drawText();\n    drawLine();\n  },[])\n\n  // drag handler\n  function handleDrag(e){\n    let name = this.getAttribute(\"class\");\n    d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"red\");\n    d3.select(\".textSvg\").select(`.${name}`).style('fill',\"red\");\n    d3.select(this).style(\"fill\",\"red\");\n    let deltaX = e.x - center;\n    let deltaY = e.y - center;\n    let tan = deltaY / deltaX;\n    if( deltaX >= 0) {\n      e.subject[0] = center + radius * Math.cos( Math.atan(tan) );\n      e.subject[1] = center + radius * Math.sin( Math.atan(tan) );\n    }\n    else {\n      e.subject[0] = center - radius * Math.cos( Math.atan(tan) );\n      e.subject[1] = center - radius * Math.sin( Math.atan(tan) );\n    }\n    updateCircle();\n    updateText();\n    updateLine();\n    setCircleUpdate(preState => !preState);\n  }\n\n  // dragend handler\n  function dragEnded(e){\n    d3.select(this).style(\"fill\",\"black\");\n    let name = this.getAttribute(\"class\");\n    d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"black\");\n    d3.select(\".textSvg\").select(`.${name}`).style('fill',\"black\");\n  }\n  \n  // draw star coordinate\n  function drawBigCircle()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const arcSvg = svg.append(\"g\")\n                      .attr(\"transform\", `translate(${margin + radius},${radius + margin})`)\n                      .attr(\"class\", \"arcSvg\")\n\n    const arcGenerator = d3.arc()\n                          .innerRadius(radius)\n                          .outerRadius(radius)\n                          .startAngle(0)\n                          .endAngle(Math.PI * 2);\n\n    const path = arcSvg.append(\"path\")\n                    .attr(\"d\", arcGenerator)\n                    .attr(\"fill\", \"white\")\n                    .style(\"stroke\", \"grey\")\n                    .style(\"stroke-width\", \"3px\")\n                    .style(\"stroke-dasharray\", \"5,5\"); \n  }\n\n  // draw axis handle\n  function drawCircle()\n  {\n    const svg = d3.select(AxisSvg.current);\n    // set circles\n    const circleSvg = svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"circleSvg\")\n    updateCircle();\n  }\n\n  // draw axis\n  function drawLine()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const lineSvg =  svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"lineSvg\")\n    updateLine();\n  }\n\n  // render attribute text\n  function drawText()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const textSvg = svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"textSvg\")\n    updateText();\n  }\n  \n  // update axis handle\n  function updateCircle()\n  {\n    const circleSvg = d3.select(\".circleSvg\")\n    circleSvg.selectAll(\"circle\")\n        .data(attrPosition)\n        .join(\"circle\")\n        .attr(\"cx\", d => d[0])\n        .attr(\"cy\", d => d[1])\n        .attr(\"r\", 7)\n        .attr(\"fill\", \"black\")\n        .attr(\"class\", (d,i) => `attr${i}`)\n        .call(drag)\n        .on(\"mouseover\", function(d){\n          d3.select(this).style(\"fill\", \"red\");\n          let name = this.getAttribute(\"class\");\n          d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"red\");\n          d3.select(\".textSvg\").select(`.${name}`).style('fill',\"red\");\n         })\n        .on(\"mouseout\", function(d){\n          d3.select(this).style(\"fill\", \"black\");\n          let name = this.getAttribute(\"class\");\n          d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"black\");\n          d3.select(\".textSvg\").select(`.${name}`).style('fill',\"black\");\n         })\n  }\n\n  // update attribute text\n  function updateText()\n  {\n    const textSvg = d3.select(\".textSvg\");\n    textSvg.selectAll(\"text\")\n    .data(attrPosition)\n    .join(\"text\")\n    .attr(\"class\", (_,i) => `attr${i}`)\n    .attr(\"transform\",(d)=>{ \n      let textX = d[0];\n      let textY = d[1];\n      textX > center ? textX +=  20 : textX -= 80;\n      textY > center ? textY +=  20 : textY -= 20;\n      return `translate(${textX},${textY})`; \n    })\n    .text(d => d[2]);\n  }\n\n  // update axis\n  function updateLine()\n  {\n    const lineSvg = d3.select(\".lineSvg\");\n\n    const lineData = attrPosition.map(e => {\n      return[[center, center],[e[0],e[1]]];\n    })\n    lineSvg.selectAll(\"line\")\n         .data(lineData)\n         .join(\"line\")\n         .attr(\"x1\",d => d[0][0])\n         .attr(\"y1\",d => d[0][1])\n         .attr(\"x2\",d => d[1][0])\n         .attr(\"y2\",d => d[1][1])\n         .attr(\"class\",(_,i) => `attr${i}`)\n         .attr(\"stroke\", \"black\")\n         .style(\"stroke-width\", \"1px\");\n  }\n\n  return (\n\t\t<div>\n\t\t\t<svg ref={AxisSvg} width={svgSize} height={svgSize - margin}> \n\t\t\t</svg>\n\t\t</div>\n\t)\n\n}\n\nexport default AxisView;","// Implementation of the Trustworthiness & Continuity Metric\n\nfunction knn(data, k) {\n\tconst knnArr = [];\n\tfor(let i = 0; i < data.length; i++) {\n\t\tlet knn = []\n\t\tfor(let j = 0; j < data.length; j++) {\n\t\t\tlet dist = 0;\n\t\t\tfor (let k = 0; k < data[0].length; k++) {\n\t\t\t\tdist += Math.pow((data[i][k] - data[j][k]), 2);\n\t\t\t}\n\t\t\tknn.push([Math.sqrt(dist), j]);\n\t\t}\n\t\tknn.sort((a, b) => a[0] - b[0]);\n\t\tknn = knn.slice(1, k + 2).map(d => d[1]);\n\t\tknnArr.push(knn);\n\t}\n\treturn knnArr;\n}\n\nexport function tnc(raw, emb) {\n\tconst k = 10;\n\tconsole.log(raw, emb)\n\n\tconst kSum = Array(k).fill(0).reduce((acc, curr, i) => acc + i + 1, 0);\n\n\tconst rawKnnArr = knn(raw, k);\n\tconst embKnnArr = knn(emb, k);\n\n\tconst trustArr = rawKnnArr.map((rawKnn, i) => {\n\t\tconst embKnnSet = new Set(embKnnArr[i]);\n\t\tconst trust = rawKnn.reduce((acc, curr, i) => {\n\t\t\tif (embKnnSet.has(curr)) return acc + (k - i);\n\t\t\telse return acc;\n\t\t}, 0) / kSum;\n\t\treturn trust;\n\t});\n\tconst contiArr = embKnnArr.map((embKnn, i) => {\n\t\tconst rawKnnSet = new Set(rawKnnArr[i]);\n\t\tconst conti = embKnn.reduce((acc, curr, i) => {\n\t\t\tif (rawKnnSet.has(curr)) return acc + (k - i);\n\t\t\telse return acc;\n\t\t}, 0) / kSum;\n\t\treturn conti;\n\t});\n\n\treturn {\n\t\t\"trust\": trustArr,\n\t\t\"conti\": contiArr\n\t}\n}","// implementation of the CheckViz Colormap\n\nimport * as d3 from 'd3';\n\nexport function colormap(trust, conti) {\n\tlet cScale = 1.3;\n\n\ttrust = 1 - trust;\n\tconti = 1 - conti;\n\t\n\tlet powScale = d3.scalePow().exponent(1.5145);\n\tlet aScale = d3.scaleLinear().domain([1, -1]).range([30 * cScale, -30 * cScale]);  //30\n\tlet bScale = d3.scaleLinear().domain([1, -1]).range([20 * cScale, -20 * cScale]);  // 20   \n\n\treturn d3.color(d3.lab(powScale(1 - (trust + conti) / 2) * 100, aScale(trust - conti), bScale(conti - trust)));\n}","import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { tnc } from \"../utils/tnc\"\nimport { colormap } from \"../utils/colormap\";\n\nconst ProjectionView = (props) =>{\n  const { attrPosition, pointData, center, circleUpdate } = props;\n  const pViewSvg = useRef(null);\n  const margin = 40;\n  const width = 600;\n  const svgSize = margin * 2 + width;\n  const isUpdate = useRef(null);\n  const [checkVis, setCheckVis] = useState(false);\n  let xExtent, yExtent, newPosition, pointPosition;\n\n  // first render & update\n  useEffect(() =>{\n    if(!isUpdate.current){\n      updateData();\n      drawPoint();\n      isUpdate.current = true;\n    }else\n    {\n      updateData();\n      updatePoint();\n      setCheckVis(false);\n    }\n  },[circleUpdate])\n\n  // checkVis render & remove\n  useEffect(() =>{\n    if(checkVis)\n    {\n      updateData();\n      drawVoronoi();\n    }\n    else\n      d3.select(\".voronoiSvg\").remove();\n  },[checkVis])\n\n  // set projection\n  function drawPoint(){\n    const svg = d3.select(pViewSvg.current);\n    const pointSvg = svg.append(\"g\")\n                        .attr(\"transform\",`translate(0,0)`)\n                        .attr(\"class\",\"pointSvg\")\n\n    updatePoint();\n  }\n\n  // update projection position by attribute position\n  function updateData()\n  {\n    newPosition = pointData.map( d =>{\n      let pointX = 0;\n      var pointY = 0;\n      d.forEach((e,i) => {\n        pointX += e * (attrPosition[i][0] - center);\n        pointY += e * (attrPosition[i][1] - center);\n      });\n      return [pointX, pointY]\n    })\n    pointPosition = newPosition;\n  }\n\n  // update projection\n  function updatePoint()\n  {\n    xExtent = d3.extent(pointPosition.map(d => d[0]));\n\t\tyExtent = d3.extent(pointPosition.map(d => d[1]));\n    const xScale  = d3.scaleLinear().domain(xExtent).range([margin, margin + width]);\n\t\tconst yScale  = d3.scaleLinear().domain(yExtent).range([margin, margin + width]);\n\n    const pointSvg = d3.select(\".pointSvg\");\n    pointSvg.selectAll(\"circle\")\n    .data(pointPosition)\n    .join(\"circle\")\n    .transition()\n    .duration(10)\n    .attr(\"cx\", d => xScale(d[0]))\n    .attr(\"cy\", d => yScale(d[1]))\n    .attr(\"r\", 3)\n    .attr(\"fill\", \"white\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"class\", (d,i) => `point${i}`);\n  }\n\n  // draw voronoi graph\n  function drawVoronoi()\n  {\n    const svg = d3.select(pViewSvg.current);\n    const voronoiSvg = svg.append(\"g\")\n                          .attr(\"transform\",`translate(0,0)`)\n                          .attr(\"class\",\"voronoiSvg\");\n\n    xExtent = d3.extent(pointPosition.map(d => d[0]));\n\t\tyExtent = d3.extent(pointPosition.map(d => d[1]));\n    const xScale  = d3.scaleLinear().domain(xExtent).range([margin, margin + width]);\n\t\tconst yScale  = d3.scaleLinear().domain(yExtent).range([margin, margin + width]);\n    const delaunayPosition = pointPosition.map(e => [xScale(e[0]),yScale(e[1])]);\n    //console.log(tnc(pointData,delaunayPosition));\n    const tncValue = tnc(pointData,delaunayPosition);\n    let voronoi = d3.Delaunay\n                    .from(delaunayPosition)\n                    .voronoi([0, 0, svgSize, svgSize]);\n    voronoiSvg.append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"d\", voronoi.render());\n\n    voronoiSvg.append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"class\", \"cell\")\n      .selectAll(\"path\")\n      .data(delaunayPosition)\n      .join(\"path\")\n      .attr(\"d\", (d, i) => voronoi.renderCell(i))\n      .attr(\"fill\", (_,i)=>{\n        return colormap(tncValue.trust[i],tncValue.conti[i]);\n      })\n\n    voronoiSvg.append(\"g\")\n      .selectAll(\"circle\")\n      .data(pointPosition)\n      .join(\"circle\")\n      .transition()\n      .duration(10)\n      .attr(\"cx\", d => xScale(d[0]))\n      .attr(\"cy\", d => yScale(d[1]))\n      .attr(\"r\", 3)\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"class\", (d,i) => `point${i}`);\n  }\n\n  // button handler\n  const clickHandler= () =>{\n    checkVis? setCheckVis(false) : setCheckVis(true);\n  };\n\n  return(\n    <div>\n      <div>\n      <svg ref={pViewSvg} width={svgSize} height={svgSize}/> \n      </div>\n      <div>\n      <button onClick={clickHandler}>{checkVis ? \"Disable CheckVis\" : \"Enable CheckVis\"}</button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default ProjectionView;","import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { colormap } from \"../utils/colormap\";\n\nconst LegendView = (props) =>{\n  const lViewSvg = useRef(null);\n  const margin = 40;\n  const width = 200;\n  const svgSize = width + 2 * margin;\n  const num = 50;\n  const rectWidth = width / num;\n\n  useEffect(()=>{\n    const svg = d3.select(lViewSvg.current);\n\n    const xScale  = d3.scaleLinear().domain([margin, margin + width]).range([0,1]);\n\t\tconst yScale  = d3.scaleLinear().domain([margin, margin + width]).range([1,0]);\n    // set color rects\n    const rectSvg = svg.append(\"g\")\n                       .attr(\"transform\", `translate(0,0)`)\n                       .attr(\"class\",\"rectSvg\");\n    \n    for(let i = 0; i < num; i++)\n      for(let j = 0; j < num; j++ )\n      {\n        let positionX = margin + i * rectWidth;\n        let positionY = margin + j * rectWidth;\n        rectSvg.append(\"rect\")\n              .attr('x', positionX)\n              .attr('y', positionY)\n              .attr('width', rectWidth)\n              .attr('height', rectWidth)\n              .attr('stroke', 'none')\n              .attr('fill', colormap( 1-xScale(positionX), 1-yScale(positionY)));\n      }\n    // set text\n    const textSvg = svg.append(\"g\")\n                      .attr(\"transform\", `translate(0,0)`)\n                      .attr(\"class\",\"colorTextSvg\");\n    \n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 5},${margin + 15})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"Missing Neighbors\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 165},${margin + 15})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"Both\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 5},${margin + 195})`)\n           .attr(\"fill\", \"black\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"No Distortions\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 105},${margin + 195})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"False Neighbors\");\n  },[])\n\n  return(\n    <div>\n      <svg ref={lViewSvg} width={svgSize} height={svgSize}/> \n      </div>\n  )\n\n}\n\nexport default LegendView;","import React, {useState, useEffect} from \"react\";\nimport AxisView from \"./components/AxisView\";\nimport ProjectionView from \"./components/ProjectionView\";\nimport LegendView from \"./components/LegendView\";\nimport attr from \"./data/attr.json\";\nimport pointData from \"./data/raw.json\";\n\nimport \"./App.css\";\n\nfunction App() {\n  // AxisView Parameters\n  const radius = 150;\n  const margin = 80;\n  const width = 360;\n  const center = margin + radius;\n  // ProjectionView Update State\n  const [circleUpdate, setCircleUpdate] = useState();\n  // Axis Position\n  const [attrPosition, setAttrPosition] = useState(\n    attr.map((d,i) => {\n        let angle = Math.PI * 2 / attr.length;\n        let xPosition = center + radius * Math.cos( angle * i );\n        let yPosition = center + radius * Math.sin( angle * i) ;\n        return [xPosition, yPosition,d];\n      })\n  );\n\n  return(\n    <div className=\"Container\">\n      <div>\n        <ProjectionView\n        attrPosition = {attrPosition}\n        pointData = {pointData}\n        center = {center}\n        circleUpdate = {circleUpdate}\n        />\n      </div>\n      <div className=\"VerticalLayout\">\n        <div>\n            <AxisView\n            attrPosition = {attrPosition}\n            center = {center}\n            radius = {radius}\n            margin = {margin}\n            width = {width}\n            setCircleUpdate = {setCircleUpdate}\n            />\n        </div>\n        <div>\n          <LegendView/>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"]}}