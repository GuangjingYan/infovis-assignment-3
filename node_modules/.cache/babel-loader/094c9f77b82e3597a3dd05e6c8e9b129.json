{"ast":null,"code":"import _slicedToArray from\"/Users/yanguangjing/Desktop/infovis-assignment-3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from\"react\";import*as d3 from\"d3\";import{tnc}from\"../utils/tnc\";import{colormap}from\"../utils/colormap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectionView=function ProjectionView(props){var attrPosition=props.attrPosition,pointData=props.pointData,center=props.center,circleUpdate=props.circleUpdate;var pViewSvg=useRef(null);var margin=40;var width=600;var svgSize=margin*2+width;var isUpdate=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checkVis=_useState2[0],setCheckVis=_useState2[1];var xExtent,yExtent,newPosition,pointPosition;// first render & update\nuseEffect(function(){if(!isUpdate.current){updateData();drawPoint();isUpdate.current=true;}else{updateData();updatePoint();setCheckVis(false);}},[circleUpdate]);// checkVis render & remove\nuseEffect(function(){if(checkVis){updateData();drawVoronoi();}else d3.select(\".voronoiSvg\").remove();},[checkVis]);// set projection\nfunction drawPoint(){var svg=d3.select(pViewSvg.current);var pointSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"pointSvg\");updatePoint();}// update projection position by attribute position\nfunction updateData(){newPosition=pointData.map(function(d){var pointX=0;var pointY=0;d.forEach(function(e,i){pointX+=e*(attrPosition[i][0]-center);pointY+=e*(attrPosition[i][1]-center);});return[pointX,pointY];});pointPosition=newPosition;}// update projection\nfunction updatePoint(){xExtent=d3.extent(pointPosition.map(function(d){return d[0];}));yExtent=d3.extent(pointPosition.map(function(d){return d[1];}));var xScale=d3.scaleLinear().domain(xExtent).range([margin,margin+width]);var yScale=d3.scaleLinear().domain(yExtent).range([margin,margin+width]);var pointSvg=d3.select(\".pointSvg\");pointSvg.selectAll(\"circle\").data(pointPosition).join(\"circle\").transition().duration(10).attr(\"cx\",function(d){return xScale(d[0]);}).attr(\"cy\",function(d){return yScale(d[1]);}).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",function(d,i){return\"point\".concat(i);});}// draw voronoi graph\nfunction drawVoronoi(){var svg=d3.select(pViewSvg.current);var voronoiSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"voronoiSvg\");xExtent=d3.extent(pointPosition.map(function(d){return d[0];}));yExtent=d3.extent(pointPosition.map(function(d){return d[1];}));var xScale=d3.scaleLinear().domain(xExtent).range([margin,margin+width]);var yScale=d3.scaleLinear().domain(yExtent).range([margin,margin+width]);var delaunayPosition=pointPosition.map(function(e){return[xScale(e[0]),yScale(e[1])];});//console.log(tnc(pointData,delaunayPosition));\nvar tncValue=tnc(pointData,delaunayPosition);var voronoi=d3.Delaunay.from(delaunayPosition).voronoi([0,0,svgSize,svgSize]);voronoiSvg.append(\"path\").attr(\"fill\",\"none\").attr(\"stroke\",\"#ccc\").attr(\"stroke-width\",1).attr(\"d\",voronoi.render());voronoiSvg.append(\"g\").attr(\"fill\",\"none\").attr(\"pointer-events\",\"all\").attr(\"class\",\"cell\").selectAll(\"path\").data(delaunayPosition).join(\"path\").attr(\"d\",function(d,i){return voronoi.renderCell(i);}).attr(\"fill\",function(_,i){return colormap(tncValue.trust[i],tncValue.conti[i]);});voronoiSvg.append(\"g\").selectAll(\"circle\").data(pointPosition).join(\"circle\").transition().duration(10).attr(\"cx\",function(d){return xScale(d[0]);}).attr(\"cy\",function(d){return yScale(d[1]);}).attr(\"r\",3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"class\",function(d,i){return\"point\".concat(i);});}// button handler\nvar clickHandler=function clickHandler(){checkVis?setCheckVis(false):setCheckVis(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"svg\",{ref:pViewSvg,width:svgSize,height:svgSize})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:clickHandler,children:checkVis?\"Disable CheckVis\":\"Enable CheckVis\"})})]});};export default ProjectionView;","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/ProjectionView.js"],"names":["React","useRef","useEffect","useState","d3","tnc","colormap","ProjectionView","props","attrPosition","pointData","center","circleUpdate","pViewSvg","margin","width","svgSize","isUpdate","checkVis","setCheckVis","xExtent","yExtent","newPosition","pointPosition","current","updateData","drawPoint","updatePoint","drawVoronoi","select","remove","svg","pointSvg","append","attr","map","d","pointX","pointY","forEach","e","i","extent","xScale","scaleLinear","domain","range","yScale","selectAll","data","join","transition","duration","voronoiSvg","delaunayPosition","tncValue","voronoi","Delaunay","from","render","renderCell","_","trust","conti","clickHandler"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { tnc } from \"../utils/tnc\"\nimport { colormap } from \"../utils/colormap\";\n\nconst ProjectionView = (props) =>{\n  const { attrPosition, pointData, center, circleUpdate } = props;\n  const pViewSvg = useRef(null);\n  const margin = 40;\n  const width = 600;\n  const svgSize = margin * 2 + width;\n  const isUpdate = useRef(null);\n  const [checkVis, setCheckVis] = useState(false);\n  let xExtent, yExtent, newPosition, pointPosition;\n\n  // first render & update\n  useEffect(() =>{\n    if(!isUpdate.current){\n      updateData();\n      drawPoint();\n      isUpdate.current = true;\n    }else\n    {\n      updateData();\n      updatePoint();\n      setCheckVis(false);\n    }\n  },[circleUpdate])\n\n  // checkVis render & remove\n  useEffect(() =>{\n    if(checkVis)\n    {\n      updateData();\n      drawVoronoi();\n    }\n    else\n      d3.select(\".voronoiSvg\").remove();\n  },[checkVis])\n\n  // set projection\n  function drawPoint(){\n    const svg = d3.select(pViewSvg.current);\n    const pointSvg = svg.append(\"g\")\n                        .attr(\"transform\",`translate(0,0)`)\n                        .attr(\"class\",\"pointSvg\")\n\n    updatePoint();\n  }\n\n  // update projection position by attribute position\n  function updateData()\n  {\n    newPosition = pointData.map( d =>{\n      let pointX = 0;\n      var pointY = 0;\n      d.forEach((e,i) => {\n        pointX += e * (attrPosition[i][0] - center);\n        pointY += e * (attrPosition[i][1] - center);\n      });\n      return [pointX, pointY]\n    })\n    pointPosition = newPosition;\n  }\n\n  // update projection\n  function updatePoint()\n  {\n    xExtent = d3.extent(pointPosition.map(d => d[0]));\n\t\tyExtent = d3.extent(pointPosition.map(d => d[1]));\n    const xScale  = d3.scaleLinear().domain(xExtent).range([margin, margin + width]);\n\t\tconst yScale  = d3.scaleLinear().domain(yExtent).range([margin, margin + width]);\n\n    const pointSvg = d3.select(\".pointSvg\");\n    pointSvg.selectAll(\"circle\")\n    .data(pointPosition)\n    .join(\"circle\")\n    .transition()\n    .duration(10)\n    .attr(\"cx\", d => xScale(d[0]))\n    .attr(\"cy\", d => yScale(d[1]))\n    .attr(\"r\", 3)\n    .attr(\"fill\", \"white\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"class\", (d,i) => `point${i}`);\n  }\n\n  // draw voronoi graph\n  function drawVoronoi()\n  {\n    const svg = d3.select(pViewSvg.current);\n    const voronoiSvg = svg.append(\"g\")\n                          .attr(\"transform\",`translate(0,0)`)\n                          .attr(\"class\",\"voronoiSvg\");\n\n    xExtent = d3.extent(pointPosition.map(d => d[0]));\n\t\tyExtent = d3.extent(pointPosition.map(d => d[1]));\n    const xScale  = d3.scaleLinear().domain(xExtent).range([margin, margin + width]);\n\t\tconst yScale  = d3.scaleLinear().domain(yExtent).range([margin, margin + width]);\n    const delaunayPosition = pointPosition.map(e => [xScale(e[0]),yScale(e[1])]);\n    //console.log(tnc(pointData,delaunayPosition));\n    const tncValue = tnc(pointData,delaunayPosition);\n    let voronoi = d3.Delaunay\n                    .from(delaunayPosition)\n                    .voronoi([0, 0, svgSize, svgSize]);\n    voronoiSvg.append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"d\", voronoi.render());\n\n    voronoiSvg.append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"class\", \"cell\")\n      .selectAll(\"path\")\n      .data(delaunayPosition)\n      .join(\"path\")\n      .attr(\"d\", (d, i) => voronoi.renderCell(i))\n      .attr(\"fill\", (_,i)=>{\n        return colormap(tncValue.trust[i],tncValue.conti[i]);\n      })\n\n    voronoiSvg.append(\"g\")\n      .selectAll(\"circle\")\n      .data(pointPosition)\n      .join(\"circle\")\n      .transition()\n      .duration(10)\n      .attr(\"cx\", d => xScale(d[0]))\n      .attr(\"cy\", d => yScale(d[1]))\n      .attr(\"r\", 3)\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"class\", (d,i) => `point${i}`);\n  }\n\n  // button handler\n  const clickHandler= () =>{\n    checkVis? setCheckVis(false) : setCheckVis(true);\n  };\n\n  return(\n    <div>\n      <div>\n      <svg ref={pViewSvg} width={svgSize} height={svgSize}/> \n      </div>\n      <div>\n      <button onClick={clickHandler}>{checkVis ? \"Disable CheckVis\" : \"Enable CheckVis\"}</button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default ProjectionView;"]},"metadata":{},"sourceType":"module"}