{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/LegendView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { colormap } from \"../utils/colormap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LegendView = props => {\n  _s();\n\n  const lViewSvg = useRef(null);\n  const margin = 40;\n  const width = 200;\n  const svgSize = width + 2 * margin;\n  const num = 50;\n  const rectWidth = width / num;\n  useEffect(() => {\n    const svg = d3.select(lViewSvg.current);\n    const xScale = d3.scaleLinear().domain([margin, margin + width]).range([0, 1]);\n    const yScale = d3.scaleLinear().domain([margin, margin + width]).range([1, 0]); // set color rects\n\n    const rectSvg = svg.append(\"g\").attr(\"transform\", `translate(0,0)`).attr(\"class\", \"rectSvg\");\n\n    for (let i = 0; i < num; i++) for (let j = 0; j < num; j++) {\n      let positionX = margin + i * rectWidth;\n      let positionY = margin + j * rectWidth;\n      rectSvg.append(\"rect\").attr('x', positionX).attr('y', positionY).attr('width', rectWidth).attr('height', rectWidth).attr('stroke', 'none').attr('fill', colormap(1 - xScale(positionX), 1 - yScale(positionY)));\n    } // set text\n\n\n    const textSvg = svg.append(\"g\").attr(\"transform\", `translate(0,0)`).attr(\"class\", \"colorTextSvg\");\n    textSvg.append(\"text\").attr(\"transform\", `translate(${margin + 5},${margin + 15})`).attr(\"fill\", \"white\").attr(\"font-size\", \"12px\").text(\"Missing Neighbors\");\n    textSvg.append(\"text\").attr(\"transform\", `translate(${margin + 165},${margin + 15})`).attr(\"fill\", \"white\").attr(\"font-size\", \"12px\").text(\"Both\");\n    textSvg.append(\"text\").attr(\"transform\", `translate(${margin + 5},${margin + 195})`).attr(\"fill\", \"black\").attr(\"font-size\", \"12px\").text(\"No Distortions\");\n    textSvg.append(\"text\").attr(\"transform\", `translate(${margin + 105},${margin + 195})`).attr(\"fill\", \"white\").attr(\"font-size\", \"12px\").text(\"False Neighbors\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: lViewSvg,\n      width: svgSize,\n      height: svgSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LegendView, \"5UkBnIsNJGBJgdRh43fKGQzYMwQ=\");\n\n_c = LegendView;\nexport default LegendView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LegendView\");","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/LegendView.js"],"names":["React","useRef","useEffect","useState","d3","colormap","LegendView","props","lViewSvg","margin","width","svgSize","num","rectWidth","svg","select","current","xScale","scaleLinear","domain","range","yScale","rectSvg","append","attr","i","j","positionX","positionY","textSvg","text"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { colormap } from \"../utils/colormap\";\n\nconst LegendView = (props) =>{\n  const lViewSvg = useRef(null);\n  const margin = 40;\n  const width = 200;\n  const svgSize = width + 2 * margin;\n  const num = 50;\n  const rectWidth = width / num;\n\n  useEffect(()=>{\n    const svg = d3.select(lViewSvg.current);\n\n    const xScale  = d3.scaleLinear().domain([margin, margin + width]).range([0,1]);\n\t\tconst yScale  = d3.scaleLinear().domain([margin, margin + width]).range([1,0]);\n    // set color rects\n    const rectSvg = svg.append(\"g\")\n                       .attr(\"transform\", `translate(0,0)`)\n                       .attr(\"class\",\"rectSvg\");\n    \n    for(let i = 0; i < num; i++)\n      for(let j = 0; j < num; j++ )\n      {\n        let positionX = margin + i * rectWidth;\n        let positionY = margin + j * rectWidth;\n        rectSvg.append(\"rect\")\n              .attr('x', positionX)\n              .attr('y', positionY)\n              .attr('width', rectWidth)\n              .attr('height', rectWidth)\n              .attr('stroke', 'none')\n              .attr('fill', colormap( 1-xScale(positionX), 1-yScale(positionY)));\n      }\n    // set text\n    const textSvg = svg.append(\"g\")\n                      .attr(\"transform\", `translate(0,0)`)\n                      .attr(\"class\",\"colorTextSvg\");\n    \n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 5},${margin + 15})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"Missing Neighbors\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 165},${margin + 15})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"Both\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 5},${margin + 195})`)\n           .attr(\"fill\", \"black\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"No Distortions\");\n    textSvg.append(\"text\")\n           .attr(\"transform\",`translate(${margin + 105},${margin + 195})`)\n           .attr(\"fill\", \"white\")\n           .attr(\"font-size\", \"12px\")\n           .text(\"False Neighbors\");\n  },[])\n\n  return(\n    <div>\n      <svg ref={lViewSvg} width={svgSize} height={svgSize}/> \n      </div>\n  )\n\n}\n\nexport default LegendView;"]},"metadata":{},"sourceType":"module"}