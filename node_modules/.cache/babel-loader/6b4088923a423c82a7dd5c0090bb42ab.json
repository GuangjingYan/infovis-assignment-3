{"ast":null,"code":"// Implementation of the Trustworthiness & Continuity Metric\nfunction knn(data,k){var knnArr=[];for(var i=0;i<data.length;i++){var _knn=[];for(var j=0;j<data.length;j++){var dist=0;for(var _k=0;_k<data[0].length;_k++){dist+=Math.pow(data[i][_k]-data[j][_k],2);}_knn.push([Math.sqrt(dist),j]);}_knn.sort(function(a,b){return a[0]-b[0];});_knn=_knn.slice(1,k+2).map(function(d){return d[1];});knnArr.push(_knn);}return knnArr;}export function tnc(raw,emb){var k=10;console.log(raw,emb);var kSum=Array(k).fill(0).reduce(function(acc,curr,i){return acc+i+1;},0);var rawKnnArr=knn(raw,k);var embKnnArr=knn(emb,k);var trustArr=rawKnnArr.map(function(rawKnn,i){var embKnnSet=new Set(embKnnArr[i]);var trust=rawKnn.reduce(function(acc,curr,i){if(embKnnSet.has(curr))return acc+(k-i);else return acc;},0)/kSum;return trust;});var contiArr=embKnnArr.map(function(embKnn,i){var rawKnnSet=new Set(rawKnnArr[i]);var conti=embKnn.reduce(function(acc,curr,i){if(rawKnnSet.has(curr))return acc+(k-i);else return acc;},0)/kSum;return conti;});return{\"trust\":trustArr,\"conti\":contiArr};}","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/utils/tnc.js"],"names":["knn","data","k","knnArr","i","length","j","dist","Math","pow","push","sqrt","sort","a","b","slice","map","d","tnc","raw","emb","console","log","kSum","Array","fill","reduce","acc","curr","rawKnnArr","embKnnArr","trustArr","rawKnn","embKnnSet","Set","trust","has","contiArr","embKnn","rawKnnSet","conti"],"mappings":"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","sourcesContent":["// Implementation of the Trustworthiness & Continuity Metric\n\nfunction knn(data, k) {\n\tconst knnArr = [];\n\tfor(let i = 0; i < data.length; i++) {\n\t\tlet knn = []\n\t\tfor(let j = 0; j < data.length; j++) {\n\t\t\tlet dist = 0;\n\t\t\tfor (let k = 0; k < data[0].length; k++) {\n\t\t\t\tdist += Math.pow((data[i][k] - data[j][k]), 2);\n\t\t\t}\n\t\t\tknn.push([Math.sqrt(dist), j]);\n\t\t}\n\t\tknn.sort((a, b) => a[0] - b[0]);\n\t\tknn = knn.slice(1, k + 2).map(d => d[1]);\n\t\tknnArr.push(knn);\n\t}\n\treturn knnArr;\n}\n\nexport function tnc(raw, emb) {\n\tconst k = 10;\n\tconsole.log(raw, emb)\n\n\tconst kSum = Array(k).fill(0).reduce((acc, curr, i) => acc + i + 1, 0);\n\n\tconst rawKnnArr = knn(raw, k);\n\tconst embKnnArr = knn(emb, k);\n\n\tconst trustArr = rawKnnArr.map((rawKnn, i) => {\n\t\tconst embKnnSet = new Set(embKnnArr[i]);\n\t\tconst trust = rawKnn.reduce((acc, curr, i) => {\n\t\t\tif (embKnnSet.has(curr)) return acc + (k - i);\n\t\t\telse return acc;\n\t\t}, 0) / kSum;\n\t\treturn trust;\n\t});\n\tconst contiArr = embKnnArr.map((embKnn, i) => {\n\t\tconst rawKnnSet = new Set(rawKnnArr[i]);\n\t\tconst conti = embKnn.reduce((acc, curr, i) => {\n\t\t\tif (rawKnnSet.has(curr)) return acc + (k - i);\n\t\t\telse return acc;\n\t\t}, 0) / kSum;\n\t\treturn conti;\n\t});\n\n\treturn {\n\t\t\"trust\": trustArr,\n\t\t\"conti\": contiArr\n\t}\n}"]},"metadata":{},"sourceType":"module"}