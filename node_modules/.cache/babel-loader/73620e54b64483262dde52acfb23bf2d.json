{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Desktop/infovis-assignment-3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AxisView from \"./components/AxisView\";\nimport ProjectionView from \"./components/ProjectionView\";\nimport LegendView from \"./components/LegendView\";\nimport attr from \"./data/attr.json\";\nimport pointData from \"./data/raw.json\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // AxisView Parameters\n  const radius = 150;\n  const margin = 80;\n  const width = 360;\n  const center = margin + radius; // ProjectionView Update State\n\n  const [circleUpdate, setCircleUpdate] = useState(); // Axis Position\n\n  const [attrPosition, setAttrPosition] = useState(attr.map((d, i) => {\n    let angle = Math.PI * 2 / attr.length;\n    let xPosition = center + radius * Math.cos(angle * i);\n    let yPosition = center + radius * Math.sin(angle * i);\n    return [xPosition, yPosition, d];\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProjectionView, {\n        attrPosition: attrPosition,\n        pointData: pointData,\n        center: center,\n        circleUpdate: circleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VerticalLayout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AxisView, {\n          attrPosition: attrPosition,\n          center: center,\n          radius: radius,\n          margin: margin,\n          width: width,\n          setCircleUpdate: setCircleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(LegendView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"m+ZCxIbS/Byem+GFKthoUH9lZVU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/App.js"],"names":["React","useState","useEffect","AxisView","ProjectionView","LegendView","attr","pointData","App","radius","margin","width","center","circleUpdate","setCircleUpdate","attrPosition","setAttrPosition","map","d","i","angle","Math","PI","length","xPosition","cos","yPosition","sin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAGF,MAAM,GAAGD,MAAxB,CALa,CAMb;;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD,CAPa,CAQb;;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAC9CK,IAAI,CAACW,GAAL,CAAS,CAACC,CAAD,EAAGC,CAAH,KAAS;AACd,QAAIC,KAAK,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAV,GAAchB,IAAI,CAACiB,MAA/B;AACA,QAAIC,SAAS,GAAGZ,MAAM,GAAGH,MAAM,GAAGY,IAAI,CAACI,GAAL,CAAUL,KAAK,GAAGD,CAAlB,CAAlC;AACA,QAAIO,SAAS,GAAGd,MAAM,GAAGH,MAAM,GAAGY,IAAI,CAACM,GAAL,CAAUP,KAAK,GAAGD,CAAlB,CAAlC;AACA,WAAO,CAACK,SAAD,EAAYE,SAAZ,EAAsBR,CAAtB,CAAP;AACD,GALH,CAD8C,CAAhD;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,6BACE,QAAC,cAAD;AACA,QAAA,YAAY,EAAIH,YADhB;AAEA,QAAA,SAAS,EAAIR,SAFb;AAGA,QAAA,MAAM,EAAIK,MAHV;AAIA,QAAA,YAAY,EAAIC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,+BACI,QAAC,QAAD;AACA,UAAA,YAAY,EAAIE,YADhB;AAEA,UAAA,MAAM,EAAIH,MAFV;AAGA,UAAA,MAAM,EAAIH,MAHV;AAIA,UAAA,MAAM,EAAIC,MAJV;AAKA,UAAA,KAAK,EAAIC,KALT;AAMA,UAAA,eAAe,EAAIG;AANnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA9CQN,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport AxisView from \"./components/AxisView\";\nimport ProjectionView from \"./components/ProjectionView\";\nimport LegendView from \"./components/LegendView\";\nimport attr from \"./data/attr.json\";\nimport pointData from \"./data/raw.json\";\n\nimport \"./App.css\";\n\nfunction App() {\n  // AxisView Parameters\n  const radius = 150;\n  const margin = 80;\n  const width = 360;\n  const center = margin + radius;\n  // ProjectionView Update State\n  const [circleUpdate, setCircleUpdate] = useState();\n  // Axis Position\n  const [attrPosition, setAttrPosition] = useState(\n    attr.map((d,i) => {\n        let angle = Math.PI * 2 / attr.length;\n        let xPosition = center + radius * Math.cos( angle * i );\n        let yPosition = center + radius * Math.sin( angle * i) ;\n        return [xPosition, yPosition,d];\n      })\n  );\n\n  return(\n    <div className=\"Container\">\n      <div>\n        <ProjectionView\n        attrPosition = {attrPosition}\n        pointData = {pointData}\n        center = {center}\n        circleUpdate = {circleUpdate}\n        />\n      </div>\n      <div className=\"VerticalLayout\">\n        <div>\n            <AxisView\n            attrPosition = {attrPosition}\n            center = {center}\n            radius = {radius}\n            margin = {margin}\n            width = {width}\n            setCircleUpdate = {setCircleUpdate}\n            />\n        </div>\n        <div>\n          <LegendView/>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}