{"ast":null,"code":"import _slicedToArray from\"/Users/yanguangjing/Desktop/infovis-assignment-3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import AxisView from\"./components/AxisView\";import ProjectionView from\"./components/ProjectionView\";import LegendView from\"./components/LegendView\";import attr from\"./data/attr.json\";import pointData from\"./data/raw.json\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// AxisView Parameters\nvar radius=150;var margin=80;var width=360;var center=margin+radius;// ProjectionView Update State\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),circleUpdate=_useState2[0],setCircleUpdate=_useState2[1];// Axis Position\nvar _useState3=useState(attr.map(function(d,i){var angle=Math.PI*2/attr.length;var xPosition=center+radius*Math.cos(angle*i);var yPosition=center+radius*Math.sin(angle*i);return[xPosition,yPosition,d];})),_useState4=_slicedToArray(_useState3,2),attrPosition=_useState4[0],setAttrPosition=_useState4[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ProjectionView,{attrPosition:attrPosition,pointData:pointData,center:center,circleUpdate:circleUpdate})}),/*#__PURE__*/_jsxs(\"div\",{className:\"VerticalLayout\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AxisView,{attrPosition:attrPosition,center:center,radius:radius,margin:margin,width:width,setCircleUpdate:setCircleUpdate})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(LegendView,{})})]})]});}export default App;","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/App.js"],"names":["React","useState","useEffect","AxisView","ProjectionView","LegendView","attr","pointData","App","radius","margin","width","center","circleUpdate","setCircleUpdate","map","d","i","angle","Math","PI","length","xPosition","cos","yPosition","sin","attrPosition","setAttrPosition"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CAEA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,GAAMC,CAAAA,MAAM,CAAG,GAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,KAAK,CAAG,GAAd,CACA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAAGD,MAAxB,CACA;AANa,cAO2BR,QAAQ,EAPnC,wCAONY,YAPM,eAOQC,eAPR,eAQb;AARa,eAS2Bb,QAAQ,CAC9CK,IAAI,CAACS,GAAL,CAAS,SAACC,CAAD,CAAGC,CAAH,CAAS,CACd,GAAIC,CAAAA,KAAK,CAAGC,IAAI,CAACC,EAAL,CAAU,CAAV,CAAcd,IAAI,CAACe,MAA/B,CACA,GAAIC,CAAAA,SAAS,CAAGV,MAAM,CAAGH,MAAM,CAAGU,IAAI,CAACI,GAAL,CAAUL,KAAK,CAAGD,CAAlB,CAAlC,CACA,GAAIO,CAAAA,SAAS,CAAGZ,MAAM,CAAGH,MAAM,CAAGU,IAAI,CAACM,GAAL,CAAUP,KAAK,CAAGD,CAAlB,CAAlC,CACA,MAAO,CAACK,SAAD,CAAYE,SAAZ,CAAsBR,CAAtB,CAAP,CACD,CALH,CAD8C,CATnC,yCASNU,YATM,eASQC,eATR,eAkBb,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,kCACE,KAAC,cAAD,EACA,YAAY,CAAID,YADhB,CAEA,SAAS,CAAInB,SAFb,CAGA,MAAM,CAAIK,MAHV,CAIA,YAAY,CAAIC,YAJhB,EADF,EADF,cASE,aAAK,SAAS,CAAC,gBAAf,wBACE,kCACI,KAAC,QAAD,EACA,YAAY,CAAIa,YADhB,CAEA,MAAM,CAAId,MAFV,CAGA,MAAM,CAAIH,MAHV,CAIA,MAAM,CAAIC,MAJV,CAKA,KAAK,CAAIC,KALT,CAMA,eAAe,CAAIG,eANnB,EADJ,EADF,cAWE,kCACE,KAAC,UAAD,IADF,EAXF,GATF,GADF,CA4BD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport AxisView from \"./components/AxisView\";\nimport ProjectionView from \"./components/ProjectionView\";\nimport LegendView from \"./components/LegendView\";\nimport attr from \"./data/attr.json\";\nimport pointData from \"./data/raw.json\";\n\nimport \"./App.css\";\n\nfunction App() {\n  // AxisView Parameters\n  const radius = 150;\n  const margin = 80;\n  const width = 360;\n  const center = margin + radius;\n  // ProjectionView Update State\n  const [circleUpdate, setCircleUpdate] = useState();\n  // Axis Position\n  const [attrPosition, setAttrPosition] = useState(\n    attr.map((d,i) => {\n        let angle = Math.PI * 2 / attr.length;\n        let xPosition = center + radius * Math.cos( angle * i );\n        let yPosition = center + radius * Math.sin( angle * i) ;\n        return [xPosition, yPosition,d];\n      })\n  );\n\n  return(\n    <div className=\"Container\">\n      <div>\n        <ProjectionView\n        attrPosition = {attrPosition}\n        pointData = {pointData}\n        center = {center}\n        circleUpdate = {circleUpdate}\n        />\n      </div>\n      <div className=\"VerticalLayout\">\n        <div>\n            <AxisView\n            attrPosition = {attrPosition}\n            center = {center}\n            radius = {radius}\n            margin = {margin}\n            width = {width}\n            setCircleUpdate = {setCircleUpdate}\n            />\n        </div>\n        <div>\n          <LegendView/>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}