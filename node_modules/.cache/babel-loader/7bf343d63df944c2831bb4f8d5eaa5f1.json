{"ast":null,"code":"import React,{useRef,useEffect,useState}from\"react\";import*as d3 from\"d3\";import{jsx as _jsx}from\"react/jsx-runtime\";var AxisView=function AxisView(props){var attrPosition=props.attrPosition,center=props.center,radius=props.radius,margin=props.margin,width=props.width,setCircleUpdate=props.setCircleUpdate;var AxisSvg=useRef(null);var svgSize=margin*2+width;var drag=d3.drag().on('drag',handleDrag).on('end',dragEnded);useEffect(function(){drawBigCircle();drawCircle();drawText();drawLine();},[]);// drag handler\nfunction handleDrag(e){var name=this.getAttribute(\"class\");d3.select(\".lineSvg\").select(\".\".concat(name)).style('stroke',\"red\");d3.select(\".textSvg\").select(\".\".concat(name)).style('fill',\"red\");d3.select(this).style(\"fill\",\"red\");var deltaX=e.x-center;var deltaY=e.y-center;var tan=deltaY/deltaX;if(deltaX>=0){e.subject[0]=center+radius*Math.cos(Math.atan(tan));e.subject[1]=center+radius*Math.sin(Math.atan(tan));}else{e.subject[0]=center-radius*Math.cos(Math.atan(tan));e.subject[1]=center-radius*Math.sin(Math.atan(tan));}updateCircle();updateText();updateLine();setCircleUpdate(function(preState){return!preState;});}// dragend handler\nfunction dragEnded(e){d3.select(this).style(\"fill\",\"black\");var name=this.getAttribute(\"class\");d3.select(\".lineSvg\").select(\".\".concat(name)).style('stroke',\"black\");d3.select(\".textSvg\").select(\".\".concat(name)).style('fill',\"black\");}// draw star coordinate\nfunction drawBigCircle(){var svg=d3.select(AxisSvg.current);var arcSvg=svg.append(\"g\").attr(\"transform\",\"translate(\".concat(margin+radius,\",\").concat(radius+margin,\")\")).attr(\"class\",\"arcSvg\");var arcGenerator=d3.arc().innerRadius(radius).outerRadius(radius).startAngle(0).endAngle(Math.PI*2);var path=arcSvg.append(\"path\").attr(\"d\",arcGenerator).attr(\"fill\",\"white\").style(\"stroke\",\"grey\").style(\"stroke-width\",\"3px\").style(\"stroke-dasharray\",\"5,5\");}// draw axis handle\nfunction drawCircle(){var svg=d3.select(AxisSvg.current);// set circles\nvar circleSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"circleSvg\");updateCircle();}// draw axis\nfunction drawLine(){var svg=d3.select(AxisSvg.current);var lineSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"lineSvg\");updateLine();}// render attribute text\nfunction drawText(){var svg=d3.select(AxisSvg.current);var textSvg=svg.append(\"g\").attr(\"transform\",\"translate(0,0)\").attr(\"class\",\"textSvg\");updateText();}// update axis handle\nfunction updateCircle(){var circleSvg=d3.select(\".circleSvg\");circleSvg.selectAll(\"circle\").data(attrPosition).join(\"circle\").attr(\"cx\",function(d){return d[0];}).attr(\"cy\",function(d){return d[1];}).attr(\"r\",7).attr(\"fill\",\"black\").attr(\"class\",function(d,i){return\"attr\".concat(i);}).call(drag).on(\"mouseover\",function(d){d3.select(this).style(\"fill\",\"red\");var name=this.getAttribute(\"class\");d3.select(\".lineSvg\").select(\".\".concat(name)).style('stroke',\"red\");d3.select(\".textSvg\").select(\".\".concat(name)).style('fill',\"red\");}).on(\"mouseout\",function(d){d3.select(this).style(\"fill\",\"black\");var name=this.getAttribute(\"class\");d3.select(\".lineSvg\").select(\".\".concat(name)).style('stroke',\"black\");d3.select(\".textSvg\").select(\".\".concat(name)).style('fill',\"black\");});}// update attribute text\nfunction updateText(){var textSvg=d3.select(\".textSvg\");textSvg.selectAll(\"text\").data(attrPosition).join(\"text\").attr(\"class\",function(_,i){return\"attr\".concat(i);}).attr(\"transform\",function(d){var textX=d[0];var textY=d[1];textX>center?textX+=20:textX-=80;textY>center?textY+=20:textY-=20;return\"translate(\".concat(textX,\",\").concat(textY,\")\");}).text(function(d){return d[2];});}// update axis\nfunction updateLine(){var lineSvg=d3.select(\".lineSvg\");var lineData=attrPosition.map(function(e){return[[center,center],[e[0],e[1]]];});lineSvg.selectAll(\"line\").data(lineData).join(\"line\").attr(\"x1\",function(d){return d[0][0];}).attr(\"y1\",function(d){return d[0][1];}).attr(\"x2\",function(d){return d[1][0];}).attr(\"y2\",function(d){return d[1][1];}).attr(\"class\",function(_,i){return\"attr\".concat(i);}).attr(\"stroke\",\"black\").style(\"stroke-width\",\"1px\");}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"svg\",{ref:AxisSvg,width:svgSize,height:svgSize-margin})});};export default AxisView;","map":{"version":3,"sources":["/Users/yanguangjing/Desktop/infovis-assignment-3/src/components/AxisView.js"],"names":["React","useRef","useEffect","useState","d3","AxisView","props","attrPosition","center","radius","margin","width","setCircleUpdate","AxisSvg","svgSize","drag","on","handleDrag","dragEnded","drawBigCircle","drawCircle","drawText","drawLine","e","name","getAttribute","select","style","deltaX","x","deltaY","y","tan","subject","Math","cos","atan","sin","updateCircle","updateText","updateLine","preState","svg","current","arcSvg","append","attr","arcGenerator","arc","innerRadius","outerRadius","startAngle","endAngle","PI","path","circleSvg","lineSvg","textSvg","selectAll","data","join","d","i","call","_","textX","textY","text","lineData","map"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\n\nconst AxisView = (props) =>{\n  const { attrPosition, center, radius, margin, width, setCircleUpdate } = props;\n  \n  const AxisSvg = useRef(null);\n  const svgSize = margin * 2 + width;\n  let drag = d3.drag().on('drag',handleDrag).on('end',dragEnded);\n\n  useEffect(() =>{\n    drawBigCircle();\n    drawCircle();\n    drawText();\n    drawLine();\n  },[])\n\n  // drag handler\n  function handleDrag(e){\n    let name = this.getAttribute(\"class\");\n    d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"red\");\n    d3.select(\".textSvg\").select(`.${name}`).style('fill',\"red\");\n    d3.select(this).style(\"fill\",\"red\");\n    let deltaX = e.x - center;\n    let deltaY = e.y - center;\n    let tan = deltaY / deltaX;\n    if( deltaX >= 0) {\n      e.subject[0] = center + radius * Math.cos( Math.atan(tan) );\n      e.subject[1] = center + radius * Math.sin( Math.atan(tan) );\n    }\n    else {\n      e.subject[0] = center - radius * Math.cos( Math.atan(tan) );\n      e.subject[1] = center - radius * Math.sin( Math.atan(tan) );\n    }\n    updateCircle();\n    updateText();\n    updateLine();\n    setCircleUpdate(preState => !preState);\n  }\n\n  // dragend handler\n  function dragEnded(e){\n    d3.select(this).style(\"fill\",\"black\");\n    let name = this.getAttribute(\"class\");\n    d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"black\");\n    d3.select(\".textSvg\").select(`.${name}`).style('fill',\"black\");\n  }\n  \n  // draw star coordinate\n  function drawBigCircle()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const arcSvg = svg.append(\"g\")\n                      .attr(\"transform\", `translate(${margin + radius},${radius + margin})`)\n                      .attr(\"class\", \"arcSvg\")\n\n    const arcGenerator = d3.arc()\n                          .innerRadius(radius)\n                          .outerRadius(radius)\n                          .startAngle(0)\n                          .endAngle(Math.PI * 2);\n\n    const path = arcSvg.append(\"path\")\n                    .attr(\"d\", arcGenerator)\n                    .attr(\"fill\", \"white\")\n                    .style(\"stroke\", \"grey\")\n                    .style(\"stroke-width\", \"3px\")\n                    .style(\"stroke-dasharray\", \"5,5\"); \n  }\n\n  // draw axis handle\n  function drawCircle()\n  {\n    const svg = d3.select(AxisSvg.current);\n    // set circles\n    const circleSvg = svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"circleSvg\")\n    updateCircle();\n  }\n\n  // draw axis\n  function drawLine()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const lineSvg =  svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"lineSvg\")\n    updateLine();\n  }\n\n  // render attribute text\n  function drawText()\n  {\n    const svg = d3.select(AxisSvg.current);\n    const textSvg = svg.append(\"g\")\n                        .attr(\"transform\", `translate(0,0)`)\n                        .attr(\"class\", \"textSvg\")\n    updateText();\n  }\n  \n  // update axis handle\n  function updateCircle()\n  {\n    const circleSvg = d3.select(\".circleSvg\")\n    circleSvg.selectAll(\"circle\")\n        .data(attrPosition)\n        .join(\"circle\")\n        .attr(\"cx\", d => d[0])\n        .attr(\"cy\", d => d[1])\n        .attr(\"r\", 7)\n        .attr(\"fill\", \"black\")\n        .attr(\"class\", (d,i) => `attr${i}`)\n        .call(drag)\n        .on(\"mouseover\", function(d){\n          d3.select(this).style(\"fill\", \"red\");\n          let name = this.getAttribute(\"class\");\n          d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"red\");\n          d3.select(\".textSvg\").select(`.${name}`).style('fill',\"red\");\n         })\n        .on(\"mouseout\", function(d){\n          d3.select(this).style(\"fill\", \"black\");\n          let name = this.getAttribute(\"class\");\n          d3.select(\".lineSvg\").select(`.${name}`).style('stroke',\"black\");\n          d3.select(\".textSvg\").select(`.${name}`).style('fill',\"black\");\n         })\n  }\n\n  // update attribute text\n  function updateText()\n  {\n    const textSvg = d3.select(\".textSvg\");\n    textSvg.selectAll(\"text\")\n    .data(attrPosition)\n    .join(\"text\")\n    .attr(\"class\", (_,i) => `attr${i}`)\n    .attr(\"transform\",(d)=>{ \n      let textX = d[0];\n      let textY = d[1];\n      textX > center ? textX +=  20 : textX -= 80;\n      textY > center ? textY +=  20 : textY -= 20;\n      return `translate(${textX},${textY})`; \n    })\n    .text(d => d[2]);\n  }\n\n  // update axis\n  function updateLine()\n  {\n    const lineSvg = d3.select(\".lineSvg\");\n\n    const lineData = attrPosition.map(e => {\n      return[[center, center],[e[0],e[1]]];\n    })\n    lineSvg.selectAll(\"line\")\n         .data(lineData)\n         .join(\"line\")\n         .attr(\"x1\",d => d[0][0])\n         .attr(\"y1\",d => d[0][1])\n         .attr(\"x2\",d => d[1][0])\n         .attr(\"y2\",d => d[1][1])\n         .attr(\"class\",(_,i) => `attr${i}`)\n         .attr(\"stroke\", \"black\")\n         .style(\"stroke-width\", \"1px\");\n  }\n\n  return (\n\t\t<div>\n\t\t\t<svg ref={AxisSvg} width={svgSize} height={svgSize - margin}> \n\t\t\t</svg>\n\t\t</div>\n\t)\n\n}\n\nexport default AxisView;"]},"metadata":{},"sourceType":"module"}